#include"Inc/Global.fx"
cbuffer cbRender:register( b10){float3 _dUV;float2 _TesselationFactors;};struct VS_IN{float3 Position:POSITION;float2 UV:TEXCOORD0;};struct HS_PATCH_OUT{float Edges[4]:SV_TESSFACTOR;float Inside[2]:SV_INSIDETESSFACTOR;float2 UV[4]:TEXCOORD;};struct HS_OUT{float3 Position:POSITION;};struct PS_IN{float4 __Position:SV_POSITION;float2 UV:TEXCOORD0;float Color:COLOR;};VS_IN VS(VS_IN V){return V;}HS_PATCH_OUT PatchHS( InputPatch<VS_IN,4>_In,uint _PatchID:SV_PRIMITIVEID){HS_PATCH_OUT Out;Out.Edges[0]=_TesselationFactors.x;Out.Edges[1]=_TesselationFactors.x;Out.Edges[2]=_TesselationFactors.x;Out.Edges[3]=_TesselationFactors.x;Out.Inside[0]=_TesselationFactors.y;Out.Inside[1]=_TesselationFactors.y;Out.UV[0]=_In[0].UV;Out.UV[1]=_In[1].UV;Out.UV[2]=_In[2].UV;Out.UV[3]=_In[3].UV;return Out;}[domain("quad")][partitioning("fractional_odd")]//[partitioning("fractional_even")]//[partitioning("integer")]//[partitioning("pow2")][outputtopology("triangle_ccw")][outputcontrolpoints( 4)][patchconstantfunc("PatchHS")]HS_OUT HS( InputPatch<VS_IN,4>_In,uint _ControlPointID:SV_OUTPUTCONTROLPOINTID,uint _PatchID:SV_PRIMITIVEID){HS_OUT Out;Out.Position=_In[_ControlPointID].Position;return Out;}[domain("quad")]PS_IN DS( HS_PATCH_OUT _PatchIn,const OutputPatch<HS_OUT,4>_ControlPointsIn,float2 _UV:SV_DOMAINLOCATION){float2 UV=BILERP( _PatchIn.UV[0],_PatchIn.UV[1],_PatchIn.UV[2],_PatchIn.UV[3],_UV);float3 Position=BILERP( _ControlPointsIn[0].Position,_ControlPointsIn[1].Position,_ControlPointsIn[2].Position,_ControlPointsIn[3].Position,_UV);float Noise=_TexNoise3D.SampleLevel( LinearWrap,float3( UV,0.0),0.0).x;Position.y+=0.2+Noise;PS_IN Out;Out.__Position=mul( float4( Position,1.0),_World2Proj);Out.UV=UV;Out.Color=4.0*(0.1+Noise);return Out;}float4 PS(PS_IN t):SV_TARGET0{return t.Color;}