#include"Inc/Global.fx"
Texture2DArray _TexLightMaps:register(t10),_TexWalls:register(t11);cbuffer cbObject:register( b10){float4x4 _Local2World;float3 _LightColor0;float3 _LightColor1;float3 _LightColor2;float3 _LightColor3;};struct VS_IN{float3 Position:POSITION;float3 Normal:NORMAL;float3 Tangent:TANGENT;float3 UV:TEXCOORD0;float3 UV2:TEXCOORD1;};struct PS_IN{float4 __Position:SV_POSITION;float3 Normal:NORMAL;float3 UV:TEXCOORD0;float3 UV2:TEXCOORD1;};PS_IN VS(VS_IN P){float4 V=mul(float4(P.Position,1.),_Local2World);PS_IN f;f.__Position=mul(V,_World2Proj);f.Normal=P.Normal;f.UV=P.UV;f.UV2=P.UV2;return f;}float4 PS(PS_IN P):SV_TARGET0{float4 f=_TexLightMaps.SampleLevel(LinearClamp,P.UV2,0.);float3 V=f.x*_LightColor0+f.y*_LightColor1+f.z*_LightColor2+f.w*_LightColor3,s=V*RECITWOPI;float4 U=1.;if(P.UV.z>0.)U=_TexWalls.Sample(LinearWrap,float3(P.UV.xy,0.));s*=clamp(U.xyz,.1,1.);return float4(s,1);}float4 PS_Emissive(PS_IN P):SV_TARGET0{float V=P.UV2.z;float3 f=_LightColor0;f=lerp(f,_LightColor1,saturate(10000.*(V-.5)));f=lerp(f,_LightColor2,saturate(10000.*(V-1.5)));f=lerp(f,_LightColor3,saturate(10000.*(V-2.5)));float3 U=f*RECITWOPI;U=max(U,.2);return float4(U,1);}