(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    271603,       5453]
NotebookOptionsPosition[    268639,       5352]
NotebookOutlinePosition[    268979,       5367]
CellTagsIndexPosition[    268936,       5364]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "When accounting for the Fresnel term, we end up with the BRDF being written \
as:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", "r"], "(", 
     StyleBox[
      RowBox[{
       SubscriptBox["\[Omega]", "i"], ",", 
       SubscriptBox["\[Omega]", "o"]}],
      FontWeight->"Bold"], ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["\[Rho]", "d"], "\[Pi]"], "[", 
      RowBox[{"1", "-", 
       RowBox[{"F", "(", 
        StyleBox[
         RowBox[{
          SubscriptBox["\[Omega]", "i"], ",", "n"}],
         FontWeight->"Bold"], ")"}]}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"F", "(", 
       StyleBox[
        RowBox[{
         SubscriptBox["\[Omega]", "i"], ",", "n"}],
        FontWeight->"Bold"], ")"}], ".", 
      RowBox[{
       SubscriptBox["\[Rho]", "s"], "(", 
       StyleBox[
        RowBox[{
         SubscriptBox["\[Omega]", "i"], ",", 
         SubscriptBox["\[Omega]", "o"]}],
        FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]]],
 "\n\nWith ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "s"], "(", 
    StyleBox[
     RowBox[{
      SubscriptBox["\[Omega]", "i"], ",", 
      SubscriptBox["\[Omega]", "o"]}],
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 " the specular BRDF we won\[CloseCurlyQuote]t talk about and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "(", 
    StyleBox[
     RowBox[{
      SubscriptBox["\[Omega]", "i"], ",", "n"}],
     FontWeight->"Bold"], ")"}], TraditionalForm]]],
 " the Schlick\[CloseCurlyQuote]s approximation for the Fresnel term:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", 
     StyleBox[
      RowBox[{
       SubscriptBox["\[Omega]", "i"], ",", "n"}],
      FontWeight->"Bold"], ")"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["F", "0"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["F", "0"]}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         StyleBox["1",
          FontWeight->"Plain"], "-", 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
          FontWeight->"Bold"]}], ")"}], "5"]}]}]}], TraditionalForm]]],
 "\n\t\nFocusing on the diffuse part we obtain the diffuse integral:\n\n\t",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"L", "(", 
     StyleBox[
      SubscriptBox["\[Omega]", "o"],
      FontWeight->"Bold"], ")"}], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "d"], "\[Pi]"], 
     RowBox[{"L", "(", 
      StyleBox[
       SubscriptBox["\[Omega]", "i"],
       FontWeight->"Bold"], ")"}], 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"F", "(", " ", 
          RowBox[{"cos", "(", "\[Theta]", ")"}], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
         FontWeight->"Bold"], ")"}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}], 
       RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\t", 
    RowBox[{"=", 
     RowBox[{
      FractionBox[
       SubscriptBox["\[Rho]", "d"], "\[Pi]"], 
      RowBox[{
       RowBox[{"L", "(", 
        StyleBox[
         SubscriptBox["\[Omega]", "i"],
         FontWeight->"Bold"], ")"}], "[", 
       RowBox[{
        RowBox[{"\[Integral]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["F", "0"]}], ")"}], " ", 
          RowBox[{"(", 
           StyleBox[
            RowBox[{
             SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
            FontWeight->"Bold"], ")"}], "  ", 
          RowBox[{"sin", "(", "\[Theta]", ")"}], 
          RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], "-", 
        RowBox[{"\[Integral]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["F", "0"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             StyleBox[
              RowBox[{
               SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
              FontWeight->"Bold"]}], ")"}], "5"], 
          RowBox[{"(", 
           StyleBox[
            RowBox[{
             SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
            FontWeight->"Bold"], ")"}], " ", 
          RowBox[{"sin", "(", "\[Theta]", ")"}], 
          RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}], "]"}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\t", 
    RowBox[{"=", 
     RowBox[{
      FractionBox[
       SubscriptBox["\[Rho]", "d"], "\[Pi]"], 
      RowBox[{
       SubscriptBox["K", "0"], "[", 
       RowBox[{
        RowBox[{"\[Integral]", " ", 
         RowBox[{
          RowBox[{"(", 
           StyleBox[
            RowBox[{
             SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
            FontWeight->"Bold"], ")"}], " ", 
          RowBox[{"sin", "(", "\[Theta]", ")"}], 
          RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], "-", 
        RowBox[{"\[Integral]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             StyleBox[
              RowBox[{
               SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
              FontWeight->"Bold"]}], ")"}], "5"], 
          RowBox[{"(", 
           StyleBox[
            RowBox[{
             SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
            FontWeight->"Bold"], ")"}], 
          RowBox[{"sin", "(", "\[Theta]", ")"}], 
          RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}], "]"}]}]}]}], 
   TraditionalForm]}]],
 "\n\t\t\nWhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "0"], "=", 
    RowBox[{"1", "-", 
     SubscriptBox["F", "0"]}]}], TraditionalForm]]],
 " the complement to the orthogonal Fresnel term.\n\nThe first integral term \
is our classical result that separates into ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "x"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "y"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " terms:\n\t",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", " ", 
     RowBox[{
      RowBox[{"(", 
       StyleBox[
        RowBox[{
         SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
        FontWeight->"Bold"], ")"}], " ", 
      RowBox[{"sin", "(", "\[Theta]", ")"}], 
      RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], " ", "=", "  ", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "x"], 
      RowBox[{"\[Integral]", " ", 
       RowBox[{
        RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Theta]", ")"}], 
        RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}], "+", 
     RowBox[{
      SubscriptBox["n", "y"], 
      RowBox[{"\[Integral]", " ", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Theta]", ")"}], 
        RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"=", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["n", "x"], "2"], "[", 
      RowBox[{"\[Theta]", "-", 
       RowBox[{
        RowBox[{"sin", "(", "\[Theta]", ")"}], 
        RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], "]"}], " ", "+", " ", 
     RowBox[{
      FractionBox[
       SubscriptBox["n", "y"], "2"], "[", 
      RowBox[{"-", " ", 
       SuperscriptBox[
        RowBox[{"cos", "(", "\[Theta]", ")"}], "2"]}], "]"}]}]}], 
   TraditionalForm]}]]
}], "Text",
 CellChangeTimes->{{3.728746761334919*^9, 3.7287467906575966`*^9}, {
  3.7287468416335125`*^9, 3.728747387266721*^9}, {3.7287474232587795`*^9, 
  3.7287475144979978`*^9}, {3.7287475934165115`*^9, 3.728747604873167*^9}, {
  3.728814596225853*^9, 3.728814623286401*^9}, {3.72881523921163*^9, 
  3.7288154858877387`*^9}}],

Cell[TextData[{
 "The second term is a much more complex integral:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
          FontWeight->"Bold"]}], ")"}], "5"], 
      RowBox[{"(", 
       StyleBox[
        RowBox[{
         SubscriptBox["\[Omega]", "i"], "\[CenterDot]", "n"}],
        FontWeight->"Bold"], ")"}], 
      RowBox[{"sin", "(", "\[Theta]", ")"}], 
      RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], "=", " ", 
    RowBox[{"\[Integral]", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SubscriptBox["n", "x"], " ", 
          RowBox[{"sin", "(", "\[Theta]", ")"}]}], "-", 
         RowBox[{
          SubscriptBox["n", "y"], 
          RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}], "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["n", "x"], " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}]}], "+", 
        RowBox[{
         SubscriptBox["n", "y"], 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}], " ", 
      RowBox[{"sin", "(", "\[Theta]", ")"}], 
      RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}], TraditionalForm]]],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7287475245055704`*^9, 3.7287475367452707`*^9}, {
  3.7288155188656254`*^9, 3.7288156318170853`*^9}, {3.7288157639386425`*^9, 
  3.728815767633854*^9}, {3.728816001705242*^9, 3.7288160062885036`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"nx", "*", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"ny", "*", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "5"], "]"}]], "Input",
 CellChangeTimes->{{3.728815634445236*^9, 3.728815673121448*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"5", " ", "nx", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["nx", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
  RowBox[{"10", " ", 
   SuperscriptBox["nx", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["nx", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "-", 
  RowBox[{
   SuperscriptBox["nx", "5"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "-", 
  RowBox[{"5", " ", "ny", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"20", " ", "nx", " ", "ny", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{"30", " ", 
   SuperscriptBox["nx", "2"], " ", "ny", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"20", " ", 
   SuperscriptBox["nx", "3"], " ", "ny", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox["nx", "4"], " ", "ny", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["ny", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
  RowBox[{"30", " ", "nx", " ", 
   SuperscriptBox["ny", "2"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
  RowBox[{"30", " ", 
   SuperscriptBox["nx", "2"], " ", 
   SuperscriptBox["ny", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
  RowBox[{"10", " ", 
   SuperscriptBox["nx", "3"], " ", 
   SuperscriptBox["ny", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
  RowBox[{"10", " ", 
   SuperscriptBox["ny", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], "+", 
  RowBox[{"20", " ", "nx", " ", 
   SuperscriptBox["ny", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], "-", 
  RowBox[{"10", " ", 
   SuperscriptBox["nx", "2"], " ", 
   SuperscriptBox["ny", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["ny", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "-", 
  RowBox[{"5", " ", "nx", " ", 
   SuperscriptBox["ny", "4"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "-", 
  RowBox[{
   SuperscriptBox["ny", "5"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "5"]}]}]], "Output",
 CellChangeTimes->{3.728815674057502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complexFresnel", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SqrtBox[
            FractionBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "x", "]"}]}], "2"]]}], ")"}], "5"], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "*", 
           RowBox[{"Sin", "[", "x", "]"}]}], "+", 
          RowBox[{"b", "*", 
           RowBox[{"Cos", "[", "x", "]"}]}]}], ")"}], "*", 
        RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.72880632314966*^9, 3.7288063702443542`*^9}, {
   3.728806403588261*^9, 3.7288064393103046`*^9}, 3.728806540485091*^9, {
   3.728806920947852*^9, 3.7288069251860948`*^9}, {3.72880779123463*^9, 
   3.7288077919946737`*^9}, {3.7288157527710037`*^9, 
   3.7288158096672583`*^9}, {3.7288280519004736`*^9, 
   3.7288280873565016`*^9}, {3.728828451559333*^9, 3.7288284664101825`*^9}}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{
    FractionBox["1", "128"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"484", " ", "a", " ", "x"}], "-", 
      RowBox[{"240", " ", "b", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"252", " ", "b", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"80", " ", "b", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "-", 
      RowBox[{"5", " ", "b", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "+", 
      RowBox[{"240", " ", "a", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "-", 
      RowBox[{"232", " ", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"80", " ", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "-", 
      RowBox[{"5", " ", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["2", "315"], " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "x", "]"}]}]], " ", 
       RowBox[{"Sec", "[", 
        FractionBox["x", "2"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"13860", " ", "b", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["x", "2"], "]"}]}], "+", 
         RowBox[{"22050", " ", "b", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"3", " ", "x"}], "2"], "]"}]}], "+", 
         RowBox[{"13230", " ", "b", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"5", " ", "x"}], "2"], "]"}]}], "+", 
         RowBox[{"2025", " ", "b", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"7", " ", "x"}], "2"], "]"}]}], "+", 
         RowBox[{"35", " ", "b", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"9", " ", "x"}], "2"], "]"}]}], "-", 
         RowBox[{"117810", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["x", "2"], "]"}]}], "+", 
         RowBox[{"12600", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"3", " ", "x"}], "2"], "]"}]}], "+", 
         RowBox[{"13104", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"5", " ", "x"}], "2"], "]"}]}], "+", 
         RowBox[{"2025", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"7", " ", "x"}], "2"], "]"}]}], "+", 
         RowBox[{"35", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"9", " ", "x"}], "2"], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7288069264251657`*^9, {3.7288157944303865`*^9, 3.7288158114103575`*^9}, 
   3.7288280931678343`*^9, 3.728828470251402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complexFresnel", "[", 
  RowBox[{"0.1", ",", "0.1", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.728806837177061*^9, 3.728806858544283*^9}, {
  3.728806895009369*^9, 3.728806897751526*^9}}],

Cell[BoxData[
 RowBox[{"-", "17.658833376105264`"}]], "Output",
 CellChangeTimes->{3.7288068980635433`*^9, 3.7288069406349783`*^9, 
  3.7288158154185867`*^9, 3.728828104382476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"complexFresnel", "[", 
    RowBox[{"x", ",", "0.0", ",", "0.25"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7288066272450533`*^9, 3.7288066544826117`*^9}, {
  3.7288068011710014`*^9, 3.7288068017700357`*^9}, {3.7288069476503797`*^9, 
  3.7288069521596375`*^9}, {3.728816257703884*^9, 3.7288162731987705`*^9}, {
  3.728816311839981*^9, 3.7288163125100193`*^9}, {3.7288163522542925`*^9, 
  3.7288163610147934`*^9}, {3.7288164504929113`*^9, 3.728816462621605*^9}, {
  3.728828111262869*^9, 3.728828113692008*^9}, {3.7288288259127445`*^9, 
  3.728828828335883*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1.5707962947378287`}, {0, 0.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7288066548526325`*^9, 3.7288068024830766`*^9, 3.728806953058689*^9, 
   3.728815817581711*^9, 3.728816207580017*^9, {3.728816258270917*^9, 
   3.7288162734697857`*^9}, 3.7288163129970465`*^9, 3.7288163615228224`*^9, {
   3.728816453066058*^9, 3.728816463092632*^9}, {3.7288281065015965`*^9, 
   3.7288281140120263`*^9}, 3.7288284738146057`*^9, 3.728828828781909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"complexFresnel", "[", 
       RowBox[{"x", ",", "nx", ",", "ny"}], "]"}], "-", 
      RowBox[{"complexFresnel", "[", 
       RowBox[{"0", ",", "nx", ",", "ny"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.001"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"nx", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ny", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7288071245514975`*^9, 3.728807127054641*^9}, {
   3.728807179289629*^9, 3.728807189479212*^9}, {3.728808008010029*^9, 
   3.7288081163432255`*^9}, {3.728816216993556*^9, 3.728816238982814*^9}, 
   3.7288163225735946`*^9, {3.7288164828467617`*^9, 3.728816506110092*^9}, 
   3.728828869504238*^9, 3.7288289678218613`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`nx$$ = 1., $CellContext`ny$$ = 0.332, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`nx$$], 0, 1}, {
      Hold[$CellContext`ny$$], 0, 1}}, Typeset`size$$ = {360., {111., 116.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`nx$237758$$ = 0, $CellContext`ny$237759$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`nx$$ = 0, $CellContext`ny$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`nx$$, $CellContext`nx$237758$$, 0], 
        Hold[$CellContext`ny$$, $CellContext`ny$237759$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`complexFresnel[$CellContext`x, $CellContext`nx$$, \
$CellContext`ny$$] - $CellContext`complexFresnel[
        0, $CellContext`nx$$, $CellContext`ny$$], {$CellContext`x, 0, Pi/2}, 
        PlotRange -> {0, 0.001}], 
      "Specifications" :> {{$CellContext`nx$$, 0, 1}, {$CellContext`ny$$, 0, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {171., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.728807129184763*^9, {3.7288071848869486`*^9, 3.7288071900032415`*^9}, 
   3.7288079898419895`*^9, 3.7288080383887663`*^9, {3.728808070643611*^9, 
   3.7288081169282584`*^9}, 3.7288158245211077`*^9, {3.7288162129703255`*^9, 
   3.7288162394068375`*^9}, 3.7288163230916243`*^9, {3.7288164848898783`*^9, 
   3.728816506489114*^9}, {3.7288288451578455`*^9, 3.7288288700722704`*^9}, 
   3.7288289684528975`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"relativeComplexFresnel", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "nx", ",", "ny"}], "}"}], ",", 
     RowBox[{
      RowBox[{"complexFresnel", "[", 
       RowBox[{"x", ",", "nx", ",", "ny"}], "]"}], "-", 
      RowBox[{"complexFresnel", "[", 
       RowBox[{"0", ",", "nx", ",", "ny"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7288091399277706`*^9, 3.7288091674253435`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"relativeComplexFresnel", "[", 
       RowBox[{"x", ",", "nx", ",", "0.0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        FractionBox["\[Pi]", "2"]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.07"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"GrayLevel", "[", 
        RowBox[{"0.8", "*", "nx"}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<Integral Value\>\""}], 
        "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"nx", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7288091463951406`*^9, 3.7288092037364206`*^9}, {
  3.728809707204217*^9, 3.7288097672206497`*^9}, {3.7288097991504765`*^9, 
  3.7288098912517443`*^9}, {3.7288163794808493`*^9, 3.728816430470766*^9}, {
  3.7288165481284957`*^9, 3.728816608711961*^9}, {3.7288166542315645`*^9, 
  3.728816656636702*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0.], AbsoluteThickness[1.6], Opacity[1.], 
     StyleBox[LineBox[CompressedData["
1:eJxF0HlI03EYBvBfszwyazMbiDm3zEmzRTODKPMWs5rOYV4tnWaGhZvOSLyw
UlaR6fwpQ0GNMmemlilLwaVWWyVELXF26Lyneawsj1VTV0G93xceHj7/Pby0
BCH3DAHDMPaf/G2zro1vxvfHe2H/jkqm0iml3t7/vaSVhHzEQ8Ejvj1jj/E4
sCZd11iLC8HqwgVSFZ4HZldkKcvxYnChU2eVFL8FnjGYm3zTm8EHVks4rant
4J6hqHyCczfYxy/cKEtQgmNSg+fl0a/AnTTGle7a1+DwckaNVqAGO2x44i9J
6gVf3adq6b7WBw4MOsqXifvBquuL9IKsD2jvTTvFcPkncHzGo+J5fBCcu0PJ
ymsbAu9Zy10mJI+AX56KWqAmjoJZ1Snvcy+MgQPCnsbIReNgN12oyk08ARYR
0zyry3Tg0w/U3FnJJJjOPM/JuDMFLqUE6LW3P4P5dQ+lPpXTYIwU4TrWMAMO
1h+MjK2fBSfejxHYK+bAo2ubcHWPHmz+YjU8QfUFbErZZXLv/wrmKIN3Cs/N
g8Mcj7z1m0JWTI7r5YJv4OxpCo+sR67hGQ6TL34HU62EQrNl5JB1e+sE6Qtg
XXIRN9OIrLYuZKdlLYJdKK4Ky/VLYEaONYtyA7lga/ES1WoZHOTQzHxeghzL
S5VzSQb07+lMf34RcuQkNdCG/AOs3X5WWleGHOHiqRuUIquZJA/bCuRnXh3v
cqqQ7/G32HBlyKK7bfkrbcgWuy3TwgaQL3lou8Ra5F+eLZsVw8hzbF4jfQK5
V9g8ZZxDrmyNipWtIW9TMJsGsJ/gIiVhhWiGfFnTWJFtgZxkwDQcIvKISeMs
tkWOtmwQddghH7c/QaTbI6tojLiTDsheDFOTxBG53b1vReWEzDpUf8xIQ/4N
1GU3SQ==
       "]],
      FontColor->GrayLevel[0.]]}}, {{}, {}, 
    {GrayLevel[0.08000000000000002], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.01541632985693, 0.}, {0.030832627656792108`, 
      1.734723475976807*^-18}, {0.04197464991194466, 0.}}], 
     LineBox[CompressedData["
1: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
jiKyo72UN5BmvLuOGFEq86yqVD/1BvI6eoYzZQ9p+UPBKIXl8/qBSNKBXGHI
2FPheOM90oVGYejH4MXMwmTSHdfDEDQJK10rIB26LBy1xu/RkmklnSN6C7Gi
2v1O/B8IR5+MRBk5AnGWwqRznkUiM0nHTzRJymxR6C4n6zFuZdK/0qOQYhfy
eLSbtNjMbXTYKzdkPJx0df0dtKx8W63fXcoqd1ERVznryiTSWvF30fLE5rPb
CqjzPWNRRd3PI37tpOmqcUhaYqsav3A3YeNF91GL0wvXFEnSAjvuo0tP9bLU
5EiXBNxHXcZ7JQ4AZc5EdMPLmyvFlnSfxAM0VlfEUE0mrUVPRrGrt6+pzSId
3ZiMDOzeWNk8IT0nnoISpt/X0qtI81enIAuJP/k1g6TrxNPQEy/Na/9t7iGf
n2UPkV151auRraTTXB4iHm6z+YuapJXbHqJjibZuSWakaQ8ykVD9pQMjrqRL
dz1C5yUqFC4+JT33Mwf1MecaD74kPbwlFxl/uue4u5p0rFMuEkrwurehk7TJ
QC4qFNnE3jhLWm3wMZoQCGeIwUfCsKIA2fy68DtIj7SrTQF61X5y1aQJ6eCU
AhQepWtcc4h0BHqC5PlnnrpcIs3h9RQ58diGlFeQ5hUqQi2jxhmy9aRl3YqQ
RsO2yqhW0rb1RYjj5orfJ/pJCwcUI8uAI3nsrAzC6izP0Q+W1Wsfryc9LVSK
Ulxvyn7dSHqxeSna37tIXXgz6eKrpaisbNzyylbSYtOlKJReG7RfnzR3Txna
PH9+iuU4aZGGVyjT0eX0mBNpHs4KtKnJvv+9M+lsgwoknWTUlu9NeryyAonv
FHziEEi6p7oS8Ufle9Smkm7+XoXCF1JHnjwk/Z96NeI7fvfog2zSeZer0TKa
n5XvU9LVAjVoaa+pyuYq0i+Ma9Gs3LeJsH7Sld11yPt2j9OFIdKDSvVomqm5
78Qo6fmgejTxrrBl+xTpMY0GNHL2Sv7k4k+EDdLfIkaluPu+9YTps/uaUNUB
659i9qTz61tQ9eMBB7tjpAV5WlHt0rNdD5xIq5u3oobcmDIpD3Lfs/ZW1LL4
fYjsFdKDI22oN+uArFoa6SqtTtTHMhp/NpOcHwzuRF/2XlhRnEO5uxMNMMfP
omekgy50oTErRvX2WnI+pvY9mvtjd9R0mMzHQ3rQvMXPjtBx0uwjPWgh9bJx
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

      "]], 
     LineBox[{{0.0023124767270472097`, 0.}, {0.0038541065070334204`, 
      4.336808689942018*^-19}, {0.005138797990355263, 0.}}]}}, {{}, {}, 
    {GrayLevel[0.16000000000000003`], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.01541632985693, 0.}, {0.030832627656792108`, 
      3.469446951953614*^-18}, {0.04197464991194466, 0.}}], 
     LineBox[CompressedData["
1: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
8H/2z339nIWBPmsdseJDFM753ghuYKDX1zz6YpWAc95tPo4MdNe0LxeNcrBt
9RhHGOgljjsrN7/DDq7SXsJE3zMgrsstMPPP2trSB5npygtHHi0V/GcGWnDF
aWY6l+DDVUzCON+Uc/wSM73MUG14ShR7+MVwOjNdOsswtGc9dvJs7CQzfeaM
a0e+Gu6vqu0MZaHfYaw8sc8K5+djlzSx0rtEHKNSI3CuNrL3Ajt993pa/8co
nLN9TLzDTm+S51NdHoPzg/f/5LPTK6D4rXcc9r25mQF2epotD7dFCq7PDZzZ
yUF3TX56cf4ptjLnRnFO+lI5ttPmH7D16OUtXHR/1a7SwC5scO79wUWfo+Ut
e/4JO/vc6mXc9O87bTI39GEf8WvR46a/O5Xz9fd3vI+D6fgzbnpsvvWBlL84
v9guc38ZfeVz+awPDLP/vFLgXdkyekgl0zzvkn9maNEL715Gv9CSGXN+Kc6j
q/cL89AdphlazHhx/kxh3S0ees9Cy7rA5ThXHb+Vy0Pfy/bQtZgf52KKYk08
dGMhK94NQji/XFTKykuvWitz8L/V2JUmsgK8dJBZyAoTxVZ/dX89L71QuXm+
as0/a9Vs3KjGS1fSTDf6vRbnDgHFOrz0/wPNXceE
      "]], 
     LineBox[{{0.0023124767270472097`, 0.}, {0.0038541065070334204`, 
      8.673617379884035*^-19}, {0.005138797990355263, 0.}}]}}, {{}, {}, 
    {GrayLevel[0.24000000000000005`], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.02055509579021737, 0.}, {0.030832627656792108`, 
      6.938893903907228*^-18}, {0.06425869442224977, 
      1.3877787807814457`*^-17}, {0.09546967236564263, 0.}}], 
     LineBox[CompressedData["
1:eJxF13c81e/7B3AkI5S9kpBQRoiIc19HKhQyQpJKMkp2oVBGJUlIiEokCVF2
oqystCT7E52srIzsEr/ew/fnDx7Px+t1XfftOA5H3NbN1J6Bjo7u9r9P2Fct
bbM/abbVVDryY55fRu2y54oDKbkjfzyPB684iiIR+2hYIOX/+6sGf3WEfl9x
MqX25q1iJ5sa0vEUw46PXgrHav83z/QsJXeN64rTKWXB3j8HLv5/riAnap+U
WPu/fZwBLmacXSvOojRLsm//daTuf7Zy3zdReLiedAFFbCpKeMBpxUWUfq/2
Pfz+Ky6muPs5Jng/WHEZJSTkqrZa74pfUfLvV8YUO78lXUWh5f0d2Dm74joK
+9udO0sDGkh/pEg0H+rxqyYd+Jmi/s3rBoX1HZm3UpZOvC50Fl5xM+VNHyPt
vizpwFbKgeHbKn8NV9xGsZ/J7XodvdLvpPjTNYZcaltxNyWabWwbVeQ9Ya3v
lHR+9o5lG9KBvZQy8a3BFY9J0w1QspqcFbSGVjxEuXf5eWe53AfSo5QwlV8h
VPcVj1PO96tsL88nHThJmUAWrAEtK/5FcYzz+QZzK/1pSvdYfOGS4EfCFdMU
C92SG2UapOlmKR+S/jtxyXrFc5Q984tqcGmlP095ZSy6dimJtNZvyvYMat/r
ypX+IiWT/kTJxd4V/6VIWAVHodWfyPssURLyHjn8lSJtQ4c42Woor/VIa9Gj
0JMD3BedVsyAlkuZhyjhpMVWIW/eLeWL2SvzjGjMeX/sq08r+WpkX3PmjP8k
6QomNBZRK/aAtZE0M9qq2cZ2SZi0GCty+PFj9qgsaZs1KOX2/HdEIU1jQ11U
1g8bDElrcSDBUaHiv0dJ061DZvFbH3W5rsxzohLZber3LpHm5EJi5ds/WEas
7ONCIabqtvwPSDdyo5/9lLkv2Sv340FmF3aF33pNOocXlbDriBt9WDEfCtlu
pN8wurJPAI3WHqRdW1y5jxAytbL02sv+mbCxMNoYdCKpQpZ0owgq/nh2qsiJ
tKU4OiM4+zrWk3SxOBK1PR96zpe0mAS6MuO/QTmM9IQEMhEJ0c3OWOlLIkYH
Fu7wXNKKm1Hx87CvTi9X8s1IdHekh8zbFUuh4dPx9x4Nkm6XQYn5wg7BEyv3
2YKM/95XPDFPenALKop6WCPK0kTeRxYFv8gcT5AmHS+P1q9+vTvKgfR9JdS8
+cJqITfSLMooQke17qEPaXdlxBCavT8/lLTldjS45oFJayZpdVWUImvFczyf
dLEqsjbgb/lRSpqyA326GWG58J70HjVUxBlwXGScdOBO5K6kKf54jjSvBtpq
OtcjT/eFcJYGSrzt5kDlIk3TRFf4bVxst5OOgn+P7y6/dB/S2tpoDfpLUQpc
mddG1UdfLr0MJc2/G6knKQW/SyD9azcSlZC4PlZKumovatfu3u9TvbJPB0Wf
vMtO94F0hQ5a/Zg7iqt7pa+LRqVX3VGhaybctw+l6ZVbvmYh7b0f2Zz2E9bh
Is2kj75kTiUekiCtboBK5PtSffeQLjmArm2vyasIJa1kilp1/fYVR5GONEWS
1kq05/GkR01R1ZVEjqR00lkH0VKL16mL9aT3mCPDYdnlc42ks83R/aXvsc7t
pIUskIb0gTdHBknPWSDv81KiGiwthD9YoprwrwVKnKT3Hka8D6P1twiSfnMY
5b1dOi8os2IrNCbc9mVWl/R/1sjh9bXr+ddI19qgws9I7Gkk4UD+E4hxYKoo
5Q7p0ydQylqbvltPyD63Leo+rk51ryNzr5NI/txYi+Mn0p9PIv/QVOfjbWRf
0Q4J53LePfCDzH/ZIQuGoWk55lbCoQ7oMX/SDcl1pKcc0PRWcwkRAdJHHVH0
wUojNmnSlFPoY2pC5pAOaQ4ntFd3v01aCGE6HldkNGHX5hVB5ndd0eGEgAN7
48hc0g25jBRQ+h6Tuag7io3cKCRRQ1hL1wMlqWtETb4nXBHjgTK+mzFXNpN5
rwd6vT1s5ngf6cueqL9t+nPiqjZiX/NZNB64bp8LG2nZc2hhy9YKCg/hiivn
EIf/8Wf/SZDW8EKqYg1hQtpk/4U3unoqaXdsIOmlCyiSq6TELpS0qy9KKGlW
UolqI3//fFE2+xqxL0lk/tYPteScW+QsJ/P8i+jb4ciztFryPKVLaIghc/j5
R8Ja+ZfQX7Nv7Qe6yX5JANq8sK8w/C9hsclAtC3FTs56dTtumnoQ2qkf8EiW
g3BFUBAyTCy41SBCWIs/GHnt2ujKQiH7hpdRzfVpqSu+hMXmrqJW1n2xf4PJ
/HAIGrieuMrnBpmXhSCWMB3a6ftkfuMa2h8Wn2BURjhQ8zqyWvOT+W0t4eSn
19GZsF3e2p8I04mGofCwYVNVGmEb5hvoYxiFfT1DB3G/yXDUveaWb8wawoHu
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
T9gt5ChI/T9bC/0a
      "]], 
     LineBox[{{0.0009635506695592754, 0.}, {0.0019270692820506571`, 
      0.}}]}}, {{}, {}, 
    {GrayLevel[0.32000000000000006`], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.01541632985693, 0.}, {0.030832627656792108`, 
      6.938893903907228*^-18}, {0.04197464991194466, 0.}}], 
     LineBox[{{0.09546967236564263, 0.}, {0.1260684148162368, 0.}, {
      0.1592606284325644, 5.551115123125783*^-17}, {0.15958330681583796`, 
      0.}}], LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{0.0023124767270472097`, 0.}, {0.0038541065070334204`, 
      1.734723475976807*^-18}, {0.005138797990355263, 0.}}]}}, {{}, {}, 
    {GrayLevel[0.4], AbsoluteThickness[1.6], Opacity[1.], 
     StyleBox[{
       LineBox[{{0.0798641833939462, 0.}, {0.09546967236564263, 
        2.7755575615628914`*^-17}, {0.10566925318250736`, 0.}}], 
       LineBox[CompressedData["
1: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
D4UKG3M=
        "]]},
      FontColor->GrayLevel[0.4]]}}, {{}, {}, 
    {GrayLevel[0.4800000000000001], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.02055509579021737, 0.}, {0.030832627656792108`, 
      1.3877787807814457`*^-17}, {0.06425869442224977, 
      2.7755575615628914`*^-17}, {0.09546967236564263, 0.}}], 
     LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{0.0009635506695592754, 0.}, {0.0019270692820506571`, 
      0.}}]}}, {{}, {}, 
    {GrayLevel[0.56], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.15096257502848248`, 0.}, {0.1592606284325644, 
      5.551115123125783*^-17}, {0.15950263722001956`, 0.}}], 
     LineBox[CompressedData["
1:eJxF2Hc4Vu8fB3AkmZkZGSErq0Ilnvs+9khZIRWRhCRJVrKTkB1KZbSQKCOS
MiOSlWSVSAgJRUTSr3Of83x//uB6Xe/78/7c58FVDzGH0+bH6WhoaAr/fcK/
vgO8eb1d9RgN+bFm/Edf5CeqCykvYxPLXe0bSD+m7Otr81Y88pJ0FoXh4e0i
ZneqcylVYT7fxgL/nyvKixzPTKe6nMIRfMqCY+Dlf31N+zUTpqb+71CZDS1N
Ky//2//jzXPtUKHG/9wlwar84zDVzykxS4PubScb/5vXbSvJyzvf+N++Mt/D
4sduUF1Dudqcx9nV///5Qx6Gs6UHm0jXUzzOO6f5ZFDdQomIuKi16zPVHZS9
TK1uzvP/N2cMz9Wra1/9d/5m4p2vi9Kv/stLbtYml7tR3UVpzhkE54qo7qYM
Ff8Z271AdT9loVIwYVmtmfRHCuur3bufBVM9TBHvOjB8vp7qUYrqoPdlCtNr
0uMU48krKn/2UT1FOf6zaKAyieppyuyyhpJIKemQWUoATUdEUA81/05Zx2D3
/uMSNf9BSWKZ3ooJtZCeowhzBoZnQqrnKbm8rH1/7aleoCgL3VCwv0D1IqVK
TDas5h7Vy5Qd/kbWIY1U/6bkd7opakyQpvlDkZCLo6dhaf3PNy486q+WJ61B
A7g+dBQGG1NzWhCt8iMC86CaDtDGctv+TSQdsgb4jaooV5dQc3owC6yYgt9R
vRY4p/oOwkXSNQzASr/icpVaGznPBFoz3x8NsiFNwwJ0fq3sgkHUnBU8NxVZ
v5pJWmM9UL6PjVTWUs9zAHdL0/b0TtL2HCCP9mhF4GfSNRxgrODMPdt5as4J
xA+FJYC17YRFuQAHSwOl0oBqHhB5bIwr0JXqDeDvs3UTlBiqeYGaC3+XUDrp
IV7gw7OleqWAdBYfKK7ZnfehirQGP5h225PyvJ2a8wNZgcMhN4dIhwiA4w0n
TwZ8J22/EXSoQjlF2g6yfyOYjnspmsFEOkQQsI4a867nIm0vBGTVe1iCNpIW
FQYGiXa00+KkNUSA05cvC7ZypLNEQDjwmGpVpnoTuH3l1ydAoZ4XBTUTIT0F
OqQLRcEAxtQqvI/0rChYTkmsi7UknSAG+KcEyv/YkuYQBxbXZO8MuFO9Gawb
zj/13Ie0x2ZQIbdV9UYQ9fk2g1PeRXT+EdRcAohWK7dax1H3SYBvo5TFtwWk
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
bhEmRlt5bLv6faPfYvh+JQkDP3nsfxusc7U=
      "]], 
     LineBox[{{0.1613177031259334, 0.}, {0.16168071630711617`, 
      1.6653345369377348`*^-16}, {0.16204372948829893`, 0.}}]}}, {{}, {}, 
    {GrayLevel[0.6400000000000001], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.01541632985693, 0.}, {0.030832627656792108`, 
      1.3877787807814457`*^-17}, {0.04197464991194466, 0.}}], 
     LineBox[{{0.09546967236564263, 0.}, {0.1260684148162368, 0.}, {
      0.1592606284325644, 1.1102230246251565`*^-16}, {0.15958330681583796`, 
      0.}}], LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{0.0023124767270472097`, 0.}, {0.0038541065070334204`, 
      3.469446951953614*^-18}, {0.005138797990355263, 0.}}]}}, {{}, {}, 
    {GrayLevel[0.7200000000000001], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.04197464991194466, 0.}, {0.06425869442224977, 
      2.7755575615628914`*^-17}, {0.09546967236564263, 0.}}], 
     LineBox[CompressedData["
1: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
TQ8qI/8BTojIlQ==
      "]], 
     LineBox[{{0.0004817913633135846, 0.}, {0.0009635506695592754, 0.}, {
      0.0019270692820506571`, 1.734723475976807*^-18}, {
      0.0038541065070334204`, 0.}, {0.007708180956998947, 0.}, {
      0.01541632985693, 6.938893903907228*^-18}, {0.02055509579021737, 
      0.}}]}}, {{}, {}, 
    {GrayLevel[0.8], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[{{0.0798641833939462, 0.}, {0.09546967236564263, 
      5.551115123125783*^-17}, {0.10566925318250736`, 0.}}], 
     LineBox[CompressedData["
1:eJxF13c8Vf8fB/BLkpkthJCVUVal3M/nIDRsoVLJV0akSFaRLkpIVkbKSrKi
jJSVlZUkZDdIyAohIuPXGfeXP3g8H6/3+JzjnssVtXY2saUlkUglf7+hP29E
mFd2aNYgJOJLXdP0T7p1LeEU8m9e6b0BrrX/z/Mn/rie8f9nsZhH41tS/7nP
wVNyPv9ffxTUtW6t/ucjXNuSctqoziNvGJ3tDfpKdTG5/k5ksaNV3f/r9Xtb
3Hda1v8/p3+ams90keoqcoW/x4+Ra/X/n7dTTtg2OfFfPfv1C6bsn//VNx7V
iJicpLqW7CfN09y48i+fbSs/4CfY8P+8Q5xFefYk1Y3kF54nxc4++Oe4pmyO
jr5/Nkr21c8bp7qdzOBmEhy6THUz2UtomaQt0Pj/+rH6h16r+6juIFu4HJ4p
OvHPLt728R5JVPeQAwNvau79RnUfOSHy0cSi1Jv/uzChOrrYieoBclNGP7iS
T/VX8kDB6si+BaqHyOeLQ9Xu8zURHiUvvNoasbz/n/1eZw9ZnKZ6nMzyZt++
sutUT5Lbdf3OTkT8c1xL452tqf8s1nFs0LuW6h/k3N6RPZ9GqP5JVu13v01m
fEt4lmwwfldlVZ8wZZ5s+yv/86soqhfIM8vqSsJF/+xDag307ab2L5E30Z/5
+GWJ6mVyFPPULkSwmahfIQtxXLuRDKleJWfysvSuW1FNAsqCD+StAqimARWi
Mv5Vj6mmBbuv6h6nNBCu2gBy2p12qo9R841AXDaMjsT8jsg3ggcBz/oq5QiT
NgHOT6151w0IUxhAiMpsIOJCNSOgucN1ej2S2s8MvIZVlCsLqWYBM8Cc8Xon
1ZuBfaxnP1wkrM4OvkzdK1rja8GdwgHMD5berthPWJ0TRM01eSTpEqZwgnfJ
H//zPUU1F2DQm9SzvECt5wZav1f2Ql9qzg2Us5ChV9WERbaAi2ZG7xPbCVdt
Adk0/5Ve+0bYig+IWfhHgI3viZwfWNLf9RbiJZwiAOILHtmtShJW3wo6LJ8b
f95LzbcCduY68qtDVAsCvZedUoknqBYCQWdHOK85EqYIg/WyTWPkUMLsImDK
6UhM+XvCraJAhv8kJWGAuk8M2NadP+/zk/CAGJgKqxdJYmwlvB2wDBvwbuYk
rCAOZNS6mX0FCM+IA7vv3xdOyxImSYIbwGXynTLhPEmQevf3V0AmrC4FqsYo
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"Integral Value\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{657., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1.5707962947378287`}, {0, 0.07}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.728809748923603*^9, 3.728809768073699*^9}, {
   3.7288098019776382`*^9, 3.7288098530755606`*^9}, 3.72880989258282*^9, 
   3.728815844785267*^9, {3.7288163819319897`*^9, 3.728816434475995*^9}, {
   3.728816549341565*^9, 3.7288166100310364`*^9}, 3.7288166583908024`*^9, 
   3.7288290524647026`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"relativeComplexFresnel", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], ",", "0", ",", "ny"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        FractionBox["\[Pi]", "2"]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.04"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"GrayLevel", "[", 
        RowBox[{"0.8", "*", "ny"}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<cos(\[Theta])\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"ny", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7288102991300735`*^9, 3.7288103074085464`*^9}, {
  3.7288166294961495`*^9, 3.7288166374466047`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0.], AbsoluteThickness[1.6], Opacity[1.], 
     StyleBox[LineBox[CompressedData["
1:eJxF0HlI03EYBvBfszwyazMbiDm3zEmzRTODKPMWs5rOYV4tnWaGhZvOSLyw
UlaR6fwpQ0GNMmemlilLwaVWWyVELXF26Lyneawsj1VTV0G93xceHj7/Pby0
BCH3DAHDMPaf/G2zro1vxvfHe2H/jkqm0iml3t7/vaSVhHzEQ8Ejvj1jj/E4
sCZd11iLC8HqwgVSFZ4HZldkKcvxYnChU2eVFL8FnjGYm3zTm8EHVks4rant
4J6hqHyCczfYxy/cKEtQgmNSg+fl0a/AnTTGle7a1+DwckaNVqAGO2x44i9J
6gVf3adq6b7WBw4MOsqXifvBquuL9IKsD2jvTTvFcPkncHzGo+J5fBCcu0PJ
ymsbAu9Zy10mJI+AX56KWqAmjoJZ1Snvcy+MgQPCnsbIReNgN12oyk08ARYR
0zyry3Tg0w/U3FnJJJjOPM/JuDMFLqUE6LW3P4P5dQ+lPpXTYIwU4TrWMAMO
1h+MjK2fBSfejxHYK+bAo2ubcHWPHmz+YjU8QfUFbErZZXLv/wrmKIN3Cs/N
g8Mcj7z1m0JWTI7r5YJv4OxpCo+sR67hGQ6TL34HU62EQrNl5JB1e+sE6Qtg
XXIRN9OIrLYuZKdlLYJdKK4Ky/VLYEaONYtyA7lga/ES1WoZHOTQzHxeghzL
S5VzSQb07+lMf34RcuQkNdCG/AOs3X5WWleGHOHiqRuUIquZJA/bCuRnXh3v
cqqQ7/G32HBlyKK7bfkrbcgWuy3TwgaQL3lou8Ra5F+eLZsVw8hzbF4jfQK5
V9g8ZZxDrmyNipWtIW9TMJsGsJ/gIiVhhWiGfFnTWJFtgZxkwDQcIvKISeMs
tkWOtmwQddghH7c/QaTbI6tojLiTDsheDFOTxBG53b1vReWEzDpUf8xIQ/4N
1GU3SQ==
       "]],
      FontColor->GrayLevel[0.]]}}, {{}, {}, 
    {GrayLevel[0.08000000000000002], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {GrayLevel[0.16000000000000003`], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV1Ak0VF8cB3BGZUmyZ19CJZQ1Cu9HZGsbZKdUliTKEpF/SLZS1izhRYkh
awiZmDQiyTKRLRElCZHM2Mr/eue8887nfH/v/e69594nfe6yhSuBiYlpBt0b
T5ZGjo5xjbPYdKDbvgcjOEgJSu2SSAYglHG2ZiAvDiecGEg6CUInt9xPR/bq
Z2vmKbWBQ06W91ORR/Xfjj1POgP9XxZak5ELew2ZSuvPQ+vk9/0JyOc45OKZ
St1BK3x/2x1kMdgsYZnjCeSXbWlRyL1+34qfJF0Gnaq69DBk454x8ZAmHxC8
sdYehJw3a+H6pN4P6JrJ6r7ITOyvizuqrsIs841OD2QnGbU/jJJACFknZzsj
v9B9rC1dEAQXbIgPrZEFbfkizHKuw6yaVs9R5K64BZ7spFCIUd/Sr4ac+qFC
cbw5DOZeTufvQqaOenQFNoVDauqeQiFk6dWBHbn1EXBNLtd45TMORLakeo3a
WyDi+Hn8B/INAbMzbVWR8HzMp7IfeXD/i/yFkmggbMmerkRm0/U1iymKgX2Y
hnUOsqbZ3lmxglg4/Fd24Q5yissDDaOcOxB3ibPFGfl4RjA1PSkeCJab+5iQ
MUvhqlTjBMiZPT80MYzWy25x85fmBJiQFudrR2ZxLym82pQIRKFcsRRk53Dx
ebw+GbLC19JEkBnRy4d/HEyBonUdzZVPONy715uiVpsC1PUh9gFkcuZdrdaq
+8BB1jRNQRZ+/jd0viQNbp8OUGZGLicPdGsrpkMAV/3FwSEcTF5Xy0QVpcPp
zef7nyEHdHm1iBRkQK3nyPGzyLSpYS7DnEzATmXnVg3iECfZkJ2a9BCESmnT
6gM4GL3LVKFsy4Fn1O3/1vpxeBNly69hkQO24yMSVOSWv90DEkM50F+hG38S
ufUn1eX3dC6EzG1XcOjDoa2lKDiDOw+OlUkTj/TiYBbh7sRllQftPpIO/3pQ
jsnqRWTkAYlIvfoc+V119mavnU/Am5d9UAa5/XFCgp56PpwILzi9QMPhfWhA
/ncbEsSwxNu5duFwQlst1jGLBLs0K89sR+6g//LsHiVBwH9pV2s7kb08VOo9
CkFEqaCLdcMOjuR714sAy+I3zHyP9pfmYZrGw2LYZE6Vvt+GwxRjy7q+XzkQ
3ru+6XmNw7rMcapmcjkEtAWFXkDmJybHKlWWg2PXSffVJhyAJMkvvFAOLwpN
X0sgp9hqyc/5VoC189NiBwraD3UelrjvM/h4bcqolIxDYnB7wYpPFeAXTEnP
q3DIz+f1mkusAopQvq4yMplmqzpRUQUNyhyEwkocJvZ+I3fPV0GY3e8d6c9w
ODT0t5vkUw0hr6OvXSrH4av2/jVrn+fQkPWPa/YpDlp/E4mVV2qhp7P+8alH
qD7kYhpbQi1Mf5A1rsnFQXv18GenslrAzbbsFEbGlhc82WZrgbdD98bgQxwM
Fq2inTzrgL+to8syG63vjHADq9sLuGDA8kUqHQfX4VwFRwcyyE5ONcnexcHN
Mdi3IpgMRC1ZB+84HC4MWdRteUCGY6xaCjV3cLg4wGJc0U8GUtSar9FtHK70
up7bYv0S3Fpsch2icQh5L59RTmwAyqJDiHM4Dm8/20YQZChAu1lm2OOPg3W7
lgCzOgXi5Fr1F/zQfOuECtYNKRDgPGHJg8x0v79tzY0Cx0qMa8x80PyP2vIy
iijw5rrC9WdeaH1rbHJ/qr6CcyVrq1ZuONxKsG7sOdwEUslE1hlrHPQOn1rN
P0eFdlXJGEcNHJYE92hG+FLhhFTUhKU6DhU/V33P3KSC4KHbQWZqOOy8/3hq
xyMqzPKF6WqooPM8+Xsg5gsVplMbdJmV0Pm4m1h70bkZ5oRDZP1k0f9hoOPq
vtNv4GP6aGUDLw72V0znqu1aYd+mFQ36dDY0SO+9SXnSDjTZOXeDhGw4lb73
8bB3Fwgxy0oy7c4G0c0vDRLcaPD1UeUK1GZBtFrzM0pMDzizUPxLVbPgiLGZ
c37UR/hH+JWZWpgJzbF/dt0K7odPTlxKgzsyYeouP3kkfRAEa5Sj3bwewNnA
ivi5pE/w2dSXTfl1Bvy3k6oSWvMZ9GoLrFjX02Hfv//oBI9RuMJtbmyglg4t
TrYLUi5fwPIRhPV6poEK7tX3n/8Y9Kp+FSPcTgVD81f21b7jYCWvf3Fz2X1Q
+HayWSHqK5AwC5nyuhTw5fbRwVO+gfyxuB+Fr5LhfGmXxc+ECTBxMjlH60mC
XUqexMBH30FG/hsm35kIyRKGM8O5k8DMz+i26EsA54KyVL2sH0DqqtIQo8YD
E4/17rGnU5Bn6NQmV3IXTGcO2Zwu/Al0023VsXV3wKXI3luYPA2DqTrJangs
fPnHmdT1dgauXKJHhSZGw5Y3f0+da54F9bHSyMrSSFj3kl9X/fgLcA2nysHi
CCBSTWUvX5yDG2GTcxn94WAubtJ5+PschFDPuzqKhAF5Ynym2nsebIiCjsF3
Q+D6DwlHwZl5kO7wfSJpEgSPHRm6ggG/we9Hpofm96sgxX75Mgv9N1TzyygX
/fSFE8zKBd5+C7D1fZX2W4Ur8M3jnkXQ6gLM1qtMVb67CF1b4477BP+B23mN
tH3sbiAnsZvMtmkROCTadDQczsLekK0qEncWwVEzRsg61h5u8cUvSrHTQazT
hcNswBIep12+YbCVDlWHOsssGyyhSZTI6raNDlnHW395P7YEJlke4ac8dOj5
RDYe9LKEEPVkHQ0ROrgUkhNvsVjCVau0CFMF5L/tdvKqFuCW9pDH9zgd4m6U
tr/KIoKxaLnS60Q6sM1oHlQ/eRSOiXV6vkqmQ3rvu8r9ckeBKD5b2HifDrbp
HJVmq2ZgK6m4i5xBhwu+zWYjBWZwUYYkUZ2L6olnlCIIZhCnkLO9oAK575J8
7UsToGknzN/upsM1CvHTj6NG8FGnbH/sBzpo3bRVH5IzgiHdDq/oXjr0qze7
Ta8fga/AORUxQIcYxryLd9URWDSIGQv5QofJZfFt8xJHQOhY2AfveTqEmdcc
XFg2gNOOV6oteBjgTEpaWm3Rh8SbpJ9GfAzomjvnn56vD1TSqLS2AANIAlx9
lpH6sHeReE9GmAEmKtftdhvoA+OuivsfKQZofZ26q0/Rg4TG30KpygzIaUjl
jg0DaNp5NWTgJAPKG5bH5cq0YdGk5Nl7cwboXW2NlvLXhj2Xv02+skQ+Sg+y
O6gN9+qtrIpsGMDd6m8bRT0EDqcO7Lt+hgFXJPTc2ocPwp9IxojYZQbM6Qws
c4ppwa4fQQbO91Ce5kC71qIOopFhjBsJDBhtyk6biVcHbunop9lJDCB6jGsV
26rDsm0K31AqAyjd26RYf6pBe2vpuNVDNL5vVQtqfGrgSxqPOFqO1iM/St3L
RwUa3I9TD9DQ9wgJSr/bFKGS5dQ1qx4GSKWF/jnrrQikh/aK/h8ZwNRy0t2N
VxES+9xTKgZRfaToJSVHBXAxvumiOM6AsIHi8iq6PHDsrtm08w+qn9m/UGK8
G2wmpI5sE1wCZ1tacKDdTlBddy1lFVqCHLXtOgH8O4FT6OkOgggyfBZndEoD
xVRjii6+BJSOTVahJtKwp8Q0flRuCfSELTmLQAqW/HwHKjWQI8cq++PEgBZX
c7hUcwn1C7WQ4BOD4idrT0kHlyAsQqDuwgNRcO6LupGti+pZY/9uLRaBt4cy
ZaKPoLzSX/vukBA8YKZ62VuhfkXXecM9BcBfhL3vlA3K7SNeCBIE4ITaCb2T
dig/YpxTkcEPBNd+XkMnlOdJ6jHe8YFn63SNkivqv0/kTpMOL+jECxCYryLT
Ztpf4lwgSLL3XA1AbnKbTJ3eBnOUhz2L15BrKCbXdbZB3m/5gqkQ5Ectm93G
tgKnNXas5xZyYFAh1YgdhsXcUwtSUL+zB6bKfDaBtZzOt0+pKG9Muh3cyQJd
SjzqvBkb87nJSdvPAk1YfXdINsov5E/uXmIGkvP2bRb5yNpHG0ZPrGPSHl8d
oknIfP69Rmr/sAc+dUXkImRZOb8Wsb/Y3ZvnTXaXIYcvZAqtr2C+eTURazXI
Nv1Mf5kY2M/iOJrKC+Qjr4oPctExl+qz0u5k5FsCMYlSi5jNm62N3RTkAynC
yacWMJ3JMyv5b5F9E80bF35hz+fUTT+92xhfbsGvM7PY/mX2dJ4O5FnzIJuP
09hOjiqNEBqyMnB1fPmBsSqy+ZgPIe9JMbL3+4qFqQ83Rg0jqza2mKqMYys6
z7jII8hdtsU+y1+w6eOOxbu+Iiuysn0kjmBu1iqrDhPIJJUTQRLD2MjpLWaJ
k8gmZqL3mIYw2uXy76vTyCGSS5yEPuzotcgDKr+Qc57YB0r3YtQw+0i3eWTH
4h+WVh+wmsRNMt2LyOkq+q1/OjHlBwM+W5aQ+3nElPvasaJHpRTtFeQr4m7/
jb3FsiptT+f/Q57zP/jWj4oJkJVKhpiWgUnLRq11+RV2j0pY42ZB5t69am/e
iLG97zMz2ozM5Jjwm6keC+8tzrjOiqxXFWpDqMFWhsMny9mRnddEb1tVYv4T
1poTW5Gl6s4JLJZhM7MKUaJcG++/5KgcK8TcGEy9RO6NfKRkxi8PG13vlYni
RQ47G3TH/CFmx/bUt55/o15GI5CQhtG4w17NCW7YIgBbjMeOCVtx7xLesM0h
Nv9bWLP03jMOohuOMc0gBGLY3vWSBPENm5FV/F2wWtWetWbJDdcOhvsbYira
hUdXpTe8cYXq/A+EsSWj
      "]]}}, {{}, {}, 
    {GrayLevel[0.24000000000000005`], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
V+8/Aef6nA==
      "]]}}, {{}, {}, 
    {GrayLevel[0.32000000000000006`], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwd1Ak0VV8XAHAhoRKSzHMq0d/wlKK7hUpSSaYQKkPI9NCIzBqMz3OLkNlL
iCLKK4+eISRECCUkGcpMhnznfnetu+76rX32ufvse+6Rvuhh7MDKwsIygW7i
yVbJ3TyofgEjJSsaH/iIg5SglLxEPIDAzi/DGshzfbGnuimnwVByNGs/slsX
Zw1foTnQH1lHqiP3H34/8JJiC+3VKimqyE869FgKKy6BYoNz517ki9w7YlgK
naBknl1TAVkM1kucTXMFZjJbvRxyh/eP/GyKBwxJOgZIIB9rHxD3q/YCuRlF
m+3IWb+NHbIrvIH50MJpCzIL17v85hJfMMz4lciBfF5WbXah4BqUFPXPrTTj
8PpQpqZ07g0g+WC3ppEFLbaGGKTdAvt8NoWfyC2RM3wplNswXlPH1oyMfypW
HKwJhBVy/V4GMrPfueVadRBcUSSFFCNLL3dvT68IAUP2M7Q4ZCNOSoV6eSho
ObPfCEQO2GZg21ASBiZOO73dkb/89zpnpiAC/OyrBo8hcx4iG9zJuwNUOU1L
NeT9Bgq/xXLvwvja7iVxZKp9kvrRtPtgr+b2cvIDDicTbzIfUmKgib9cKhIZ
Oytcgh+Lhdk6zkFP5I5zc+u/18QC1a+32QSZzangiW91HDD/CsiKINsFiU+l
VsTDEInjbVITDgsRf3V+HaBCsmte03Xk6OgOqlo5FSKtBtnNkOmPojTqSxLA
2kl8ejOy8MvV21MFD0Dr/nKldyMORfTuVk3Fh2DoHy16Aln/XalseN5DmC1r
TJNGvtriVieSmwgl00a7mhpwaBvt49FLewTW+n17tiNHSr5NwSmPIXn38Iaw
ehyONj5SYWxOg9kxOxcD5NpwCwF14zQQo6m18iDXrbZ2S/SkgZ/S3FNqHQ71
Y0z76fF0UPx9A6fW4tBQl3czkTcLVv5Z6TkwcTAIcTrPY5oFzPVff4sgN2By
2iGJWVAiy5/68R0OjaUp691ksqFkax73PuSmzNhYbVIOGJJPiy9U4fDh9tWc
n+Y00LNz3WtQicMpTbW71sk0EPuivnPyLQ7N839cW/tpIPBeekcCYTdnlQrn
J0Cv9VPufYNsZU2PvpUHJgqi4TZ0tL/267SpP84HrQYJEukVDqMLHGuHvYtA
y62hS/Y5DmuyJ5n744uAKr/r4fNiHASM4u8qvSgCOd9af21koEkKCM8UQX7Q
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
      "]]}}, {{}, {}, 
    {GrayLevel[0.4], AbsoluteThickness[1.6], Opacity[1.], 
     StyleBox[LineBox[CompressedData["
1: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
       "]],
      FontColor->GrayLevel[0.4]]}}, {{}, {}, 
    {GrayLevel[0.4800000000000001], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
ZuqV58x+zJVAWcP526dV5jx3/Q87Ua1P
      "]]}}, {{}, {}, 
    {GrayLevel[0.56], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
TT7/A7HnSVI=
      "]]}}, {{}, {}, 
    {GrayLevel[0.6400000000000001], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwl1Xk8VF0YB/BLiJB9C2WJRAqRCueoRJQ1uywhwox9KUlKEiFbypJGhEQq
0ULZW+VlskQp2ZeyL4nynnObf+bz/fzO8zznnnvnjqSzj9kJRoIg9BkIAn+v
qV7X3K92HBBn+aqP7KNCCUEJ2Y0pEBIMTScPI8/3JBp1JRtDQoHTTQ+Z+om1
kee+FSRWOiu0kXv3ve2rSHaEBM92O3Xku+06xP1KF0g85jmqgOy8TuYqcd8d
Ep1R2WLIYpB541GaFyTWJ2ixI7cHDBbfSfaBROp2pUVtKtRr6xMPq/ODhAkl
uBc5b8LsxJ3KAEj8d4T7NTLBVl/c/DgIEtodf4qQ7aV3zi2WhEDiLBeMQ36u
lashWXAarSPaPJEFrfkiDWhnIMHyoEoXuSVuludm8jlI7PWPWYBUmPbx4bb+
xghIrLlBfYfc0OvRElJ3HhLOeXcykSWXu4RyKiMhIXOLZxeyCWtypdrTi5Cw
zD+4CqgwXMDA8d3jKEgUNX5oRO7e8Tx/tiQaEiFR3QbIrFr+BpeLLkNi6oAj
G7K6gfyEWEEMJC5b7m7UosJU1ww1XdoVSMDKYVVkw/TQhhvJVyGhe1ZrToMK
wVGRx2l6iZAoo7vdRG63mWf+3oh8im/wAPIa95K7QXVJkOAo7b28lwqdzotP
Z1emQCK5u2NmNxUuRi/tH92TCokLvEWXkBMS2lN3PkUuWKALIVdlxu9+8/ga
JByVZFXUqVCk4s+56ZLraH50u64aFT6o6mrV2HYDEtv32jSqUuGh+nLpS0XI
1ZE79yEHt1BfbyhIh4TNsR9KO6mQPtazXoeWCYkSuv+UEhXGbXp5My35FiS6
KTOTClSo+z5TuYaTBgkmeRs15FeXrPnVzJBXXuWEyFPh6z+tXRs/IxeGds3I
UeGb8QbXmR856P7NjtTLUOG710Wh6dx5kDB2rWrZSIUGke726y2Q71w5NiCO
crBZOzIdWdelb06MCt+X32SmSt2BxI1dNA5RKmzKTUzUVs1H5yfzQ1CICj+c
C84ftipE5/ee+fp6KjTS2BlzLAu5m136NCcVNi9MerX2Ius/kLfmQKZ6KFd6
3IVErc9vjnXIdseqEs4UQWIzxx1TZvR8qe+nq90qRtdTFqC3TIFjiyyr+wIe
oPPxiBseoMBVacMG9RTkIDal8/0UyG+SEqNYhuxXpijcR4GwcBO/yCxyePxu
8I0CU613b53yfwiJSJs0zy4KBM88jmb7P4KEbUCDzgcKTAptKvjt9xgSB3pu
MpRRYH4+L3UqCVnvppbeQwqsolurDD1E/jx8ILaUAofkB6tap5GXOqNYiylw
7+c/rYV+5ZCochsfzKPAAY0dK5Z+Fej59MzZnEaBu/8kmZT5PoWE0p3lx8Fo
fZjnddZEZCYK7VEgBWos7/9qX4q8Y31biT/a39KsF+sE8kb6aJY3BR6Yt4i2
93oGCdXFL/ZuFGj0U+TlWrfnkBi5YuJlQYEnenIUjtlVoevZx/BUmQLffrWO
ZJSuQb/HaEK93wtaNu0WYFBF9s0Zden1ggPPhAtWdZBtaWIJPeg9cu3TuxU3
5D3BLt2dXnD3YWvexSLkHe2xZk1eMP+JVc64Si0kmmznax97wYuJltVt++vQ
/RNbmxvpBbX3my/nOzegereubBEvaOurP1Vu8wYS8rr81D2e8KWk/IWaO02Q
0Pn2RVraA5rfkM/t8W6BhKLyg6oZdyjK/OJAohsdEs+SftlVu8HonY2Pai63
QeL4Ic1M+xPwoJ6BU/6lDkjE5cyzMrvCxpg52YuhnyCh/LzBq8gZjsXzV327
0Q2JYTHfK4rH4fGQh1enkr9AgrH80NlUR3hWqkH53JOvyHf+ymYdg9v/nl1g
9OiFxKPYkroGG/ja3npWwvU7JH6VSkTtsoLK2dTOs4F96P1ZfXwoyRzqmNba
lvv3QyKsMd4SmEGFQeNGhUsDkPjClS711hj6c/tpZqcOQsLJc6Ix5jB0ud9i
Np44BAnuy2MvxvSgrKKXScjtYUjQNF+ucdCBKRt1fvbkjEDiByenpPs+6FRQ
mqadNQoJiZzPVjla6H/AckvfvTFU/9N956PdUP/nXiuHu+PoeaqDDA9VoWuR
rbdI1Q+0X60p8zkl+P0vR3LL25/o/Vi/yfy+AmR59cfcuXECvd9n3bPqZGF+
YP71O2+RJRzrGUtloa60cffIB2SCwy0kUxZeiqA5+nTg/LbzlUBZyKxxwDNs
GPugi/0WWcj04PK5NLZJSCTOdt2+KgMZM/iK3hlii6aEe26Gq9StqyodyDXG
zO16UtBT0LhYsRtZu9Y6f7cUbHsZaCP3FTs27MJWKVjEVVMmPoRMnBS3Y5eC
5g8tT7IuIHNHbIz/TxKa/64dmVg3hfrNzk7YSMJCrUnTBnlkpTd9EcES0KRB
f7OPJ84lbqtmisPHL+b9nSnIEdbA5YI4FH6SU2vhjax9+luuhzjsvbvkoOmP
LHGDxW63OPS9ejedLRR7ov5WhxhMtGXjyotBpln2nRYUgy1Tb5Y+FeJ60WS5
3A3QVPzQf/uHkXvdq/dMCMHguLpMp1Gcp1/51CkEs5Y1T4aP4/nfr8fUCsGR
LmWG55O4/xUodU0IhqeJ7lT+ha0cuE1LCBZzTaZtYptG69PfpScKQhbGNIcV
eeyy2UgdAVg11P+z3Bu5xt6I+SsvfE3P8in1xZ7s4PzAC+kvLaYL/ZGdDj6T
ruKFI2mv5zKDkYkI95AMXsivd2/5fDiyxIjvCyteSCnwZzNKQNaOCa1q44Fi
JxlkhkqQaUyW+p+44ZnRjccEf+L5Ab1Ra9fDQ4fz7fZOYsvpuY9yQv4SRTuH
aTx/QcjlPSe876tpmz+PvbPg7lVO2LtoY73rL+7PaeArwgkPslwzt+SaQeZX
oytzQC5pdsM0ZWyLeMegdTD32KKWYDByxDP3sANrobnGixmBU8hEzZ1f29ZC
lg2RBQKheP3Xj9GCa6Fn53oegXDkmsbXX0dZoIqZ7ADfJeznkdQkFlinZxHL
k4brRfkYB5hhn0pZB0cF7u8VUpDGBCXYfHzWLGCvmv7ZzggZOI3ElhZx/3sU
WXFG2Met+HZiCecLSQ7sjDBXeFyq+w/uV9K8PMwAZeXcOx4wzyJPtY7kMMBt
eo5aDgLY05KRwgxQPcqY/Zkqsra2jxc3AY0YlAq8A3D+d8XLdAVMhfa0JgQh
R+hay6msgJS52JX7Idj+PQx8K+DT8KDp5Bm83pGRo30ZHG/OXPG5iL2POdR2
GQRmrjXzu4bNQyvw/A0y1L6tBDzB9d+db9/6BQY9EsxOL+O8sULEah5QnEJV
gv7gvCmFU3sezFm68fqt4lzip8DWecCkA+gn18whq9JdlueA1MYJU2t25IjY
6zO0OeBENzRVF8XeV/9hchZ07+U0md+LTX+xLmsGOCsv7ZjWxP7V5R09A8a2
DHL9BLhfX9Cg/wxY4n/x38B+7LgpNoMZIDxJMW4zwM4+sn1pGljkNhmV2WIb
0Dptp0ELe5yhXyju58StpzAFRE7p3rsehvM9qhZCU8B5gGB7GY7zm9PBa6bA
fFVQw7pInCcPjT6ZBBu8HTXyrmCft30kOglOtKhs7czCDljnPvYT/E7tYtKq
xp6SDs4dBzoMqc4utdh0L/WIcRBPNaqJqcd+XSdqPw4kdOvPdLzGXpIwFBoH
BxeLZ3xasI32GMePgUSbiN7b37G52CvOjQKZjVuqWJnmkSMNtc4Og+zS3zwy
LNi8FRUOw0BwX7P7Plbsd1ZG2sOAxTWIL5QDe11P55phMHS33nOcH9uM2zRu
COSrOYk0y2CfDWi8PQjkDNODU/SwN1QyD/YD2ldKU6k+ds1H/nf9QNhXW6rp
MDmfCZb2A9aU4Q9MJtgCJgOn+8HIJzWZYGvsIcKXux/cdaV/tPbAfp8Rsr8P
yIexK2+8gr2bVvSsF1yOFdcUjMc+0R+d2wsGb+zQW38Vm984NL4X0MqP2v9N
xuY6ln28FwhMZsZ8zcDeHPh9XS8gnLf1ZReR/YRj676CTj3DlE3vsI3eSuz9
AlQtHbOFmsi8fZD3C0h29bvL1Yw9oNA6/hkcOX+terWVPA/tDdmfQd3znvFv
Xdi6lf5Mn8F9RW8d2ii2DpP0py5wke/qvATbAn7+uisyOkHudZ/wA+zYnjxS
QZ2gTtRkrRsnti5/hXEnIDbziNzjwf49b8XcCcJUUzTVNmDL+p3z7wBBFtcj
9RWw5ZaheTtwu36Lx98Q+/G2PNWPIEo0IiPVGJsQH+X7CPJuOUk/McW2/Wg2
Swd9BZJqKxbYShtSH9GBw9Nc60sO2GEt71TowLKr4FaGD3bgock9rUBP9IFi
fRL2obCshmZwROw/r9oUbFWzoqvNwER84m71Ney2LTO2zcB60zbZqnTsRLkd
Mx+Ap3ThxvIc7LwhG+kPIE6BxlXwEPuphFHie0DXSJyObcX2XZue8gZ0aJbu
iPlIXs+f6yfegM9azdToduyB5ffqb8AA5BiL7MKmhdG/vAbzBy73hX0n+ydY
bH0NhI9EfPSeJuvD+ZsagcMx33IznkVk7YMX1OtB0oXCcV0+bPOPedz1oKGw
V1JDAHtObWG0DsjPmyRIi2DzM8jcrAOL8crucxLYh7xLmetAYvWMcJoSdqqo
w7caUCcVFNZljM1qV3nyBZg/VPLogyn2FE1X9gWQ8xkcqT2K3ZsmN1AFEiot
LIqssIlXk05VwM581/YzjthOuVEOlWAuavGbmA92xLtcj2dAdvT0AacE7Mtl
ti/LgWhUxGJ4IllfcOt8OeCWjL53M5nsX3DgYDlYsk7l+5xGzp8v+PAYNL25
329xC9v6v899ZcC/sD/y8APsp1O1Gx+Bl+6GDbvo2BLaBhUloGyN+SmLNuwH
mc1HS0DhLdttgR3kvKtMM8UgqdM99WE3Nu1TpFIxcNW74Lqtn5xv9aq8CKzb
8oRJag47UZT7ewGwGpI4yCn4C9mEIeLpbaCyeuL+WmFs7eflvrcBh/A9IcYN
pL3Obr0NavTVxhbEsZ3aarNygFyJ/tVeGeyae8KxNPArwL+rTA07wjd7NQvQ
457sv6+OTXslcCELFN9ZuVe4h8xdipizgFPnpfCbWmT9yFbuTPB2b6Z09EEy
jwxRSQcZDA1UWwvSq7/vXQOBG9g6za2wiaMbtK8Bo51G2sY25H62mLanAsYT
n3h17Ml5DExrUoHXmx9PFE+Q692DvJKB5lUBRoYgct7RC70JQLDQ1ms5mOx/
+IRCApiqudU2f4p0EPVUPMib2VowFkZ6x7hwHOCwBEfaLpJmjw+IAT1i7mkF
qWS/twsJF4GljObglzTSnotjkaBFkUeVN508P50M/UhQBypbw26S+5FqWH8B
FDpxcZrlk/2O7/A7ByQ9BuyiC8ncWOVoOMjwe1ZUVUQa+O49C+IvuBzaUkqu
77ghfAb45z2JXHlC5jXn+ELAeHEcXfk5mZ/V2hQMXMuPS7pXkZbYrhQErF6x
V7fWkHbMOx4ANEccf+e/Jevlmhh9QcWUqv6X96R9uX29wY4lths8zaRLegco
QGrdY7UwOmnLyJ8eYO02Vj/Tz6R33Q11BRGqPdWXekjHPlN3Ab81H62v+ka6
U3D1OPhheKxYdoC0iruNI3CzVF62GyId8V3GHnxzYDFIGiGd+oPFDtB9Hgwv
/yBdWMxiBQ6fitqlPEn6ub2MBWiIsI1ym/6XX7c+Cp4kMUm3zpP+pLVkDJQy
uvxYfpEeaO0+Aopu36/R+E36mOegPsgqs3bI/0u6KStIBwhUKZZ8JpawrZWX
94GEBsYV7jWkuc8dhYD1Q6eBLjNpiVhGDXC+vTj9zNp/68+tUQe/e86PPGAj
TdhZ7gSBQ5bqQ+ykaSoLO8DPCYVLouv/5d79W4HbItFuwk3axDlwM+hdbZe+
xEs6gt9sE7Bhvedfyf9vXi2jEKBzR9ROCZLWjprnAkdELLhlRUjXyAQygUZJ
eUc70X/1RYyLWkB+tSRR/N+8XYEDWk9V2lYaN/1zWGCD1kPpJoNlyX/Gn/8B
/0bb/Q==
      "]]}}, {{}, {}, 
    {GrayLevel[0.7200000000000001], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwt1Xc8Vu/7APCDMjJCiJIZSRpE+obrRkJGZKXieSQlDTJKH6kUGS0zpIHI
CiHKypaRhGRF9oiMyigpv3Of5+cfr/frGvd13eccJO1dzE4wEwSRwUQQ+DdL
6arGQZVjQDSl5IjsoiMJIQlZsXCEiOh7vWtJz/WEHOgMM0HEWbuT/KTPdbBX
82UeQkSfuB4H6T6tuoFXYXREfPtwfUmFjlI/6RCZRcfJfA+hb6TtV8kEE5mO
iLjEv7KDtChaKWYedwYRRlnGZaQ/uQ+nPwtzQYSm5Uwiab3WgQ3eFa6IaOKY
vEk6ccrsxLMid0SEtO89TprgqExvzL2ACP26WXXSttI7ZxcyPMn88WV+0oUa
CWqSyf8hQm7/iWFlOhKyXuNrEHeZnOfHxlzSTXd+8j0Ou4aImeMvdUlHfsxW
GKz2QQTvgRurSFf1OTV5VlxHxNLb5/U76UjyT+fa+CJfROzO49EkbcoeVqSS
74cIb0v9OSU6uipoQK/PvYkIm67uJNJd2wuTfmYEkPvMCi0r0hG7hptBYFog
ItTfFD8jrWogPyWaHISIqpY3+qQjHGJUdONuI6LhUIvvDjoyfuBVFR0WTO6n
qt+4jY7AXCQ3Ui8EETr17w6R/nR4bmV/NenWF897ttIRi2NG6oWKUEQMrbr+
RYGO7K5v+P6kKJzc/4x/rjwdLQT81v76vwhE+MzOSJC+d+9TxM580pfECoI2
01Hxw7u7a3Pvk/PwHjeVoyORV3+vfc+IIvdplcqRoaOs4s5mNYVoROSWXWMi
rV+ZJ+2fRjp/UM14Ix1dbDpXsy75ASKEM1s6peioZbyHRyfuISLO5/nUiNPR
HfGSx5FhseR96QjOCdOR7ruHimXcceTz6ns0v5aO3vpbC6iYkbaJG/4pREc1
f5s7xT6TXmIu7hego9qJKocf3+IRUcwUcIuXjupr0rwe8CYiIsVghpeNjgx8
HW15LEmHhBY0riTjsFHT9wFph/sGgSvo6F3e45XnpJ4houNF9RQTHTUkhIRo
Kich4lHQ1qAlGnp/7WLS6KEURPg93jk7Q0MH1HYG2TwinZ/w0nmahhrnp880
95GOCGAZniR9zkmxyCkVEYEygtXjpI/aFN+7nEbuU7TafIiGmlS1W1Ri08l+
JqNJbTQ0vsC6rOWehQjrl5FK+TS0LG1cpRpOupaT2fAVDQmYhgdtfUm66VUH
PZeGUIq4gMhP0spu9VezaCjCevfmGbdscp/iptAUGoICJ/Mnbjnk81KZ54qm
oVCvhuRF11xyv/uGNh40lJTEf24mlPSY+XEWNxoqbrFWGskmPTP5J8mFhkbk
h4ubv+fi7y9n8DQN7fn8tznFNY98vn6GO4/R0JDa9iUr11fkfEltW4xpaPff
UNOX5/MRwVX8LUCKzPc+HcUeQtqvKr5RnIbU/mh/sX1B2khvDf8Gcr7fP8+w
T5HevWp78Foa2jtnGWB7poDcr9fOnou830mREraTheT7XHzm3JwtOtETv8Xm
aDEiLE4h0WpbVPfF2pdZugwRO/77wXvUFlk17BZkUibdejhA65AtGioQTl7W
Ie0zf9vZ3BYR9zvql06SVqj5+sbQFu02tOZfSCOdWLJBSd0WJb0+FD+hVI6I
2fQYV1Fb5BdiVdqqXUHGByqsumyQprbFnyT7KvL7N7fkMrJBR87vn8k7XEve
33uDIYmjqERS/kbZswby/dUe/5l1GFlEyyf0ODeR9Wd556Ss0fqVb/aGnGwh
99lzky3SCgXsrM4pC2xFRHf8m5yPFmifnoFdkn8bIuJu3F+30RxVB83K+nl1
kPdZJu7030E0fleguDe6i3w+C3KBR03QMc/s4JmwbtJWxCsBI3RFqkrx2usv
5PfF0zCWoo+2/bsyz+zUR5rdmMVrH6qxtf4p4dBPvl9nUyVztJHik3PtVzwG
yL/PtvLbWhDSOVh+JM9tEBFZkj80hdTQlmGT6i3+Q2T/a4Ntl3chN15X9ScR
w4goK6gQ91FCxzObzCZCRhBBtHCMXN+GZLeeMfV8Okr2e9wi5CaHwsV0Jnvi
x8h9jrn7PJNGrxq+etY8I63pw4QipFGXVzBzdippH4t9HL7SSKK9a61f9hiu
7y6zk0bpwa7a8uWk7Qobi0Sl0VsiNupiH+7XNdgdKYUWB35rrRb/Ss5THpYe
Lonskl9Eaj4irdn1kNVWHLFq/RC9Fkfap2RzooY4yuhSTniTiK0QfURMHC1y
F77Yk4Hzg0f4+sRQhEdVrXIJ7rfrV4qDGKrV6lyU68Pxbltntw1oRzcznW/j
OGlPDaa49Yjgs9o08Jw0YfhfjKYwck0UFO54gf35RJWcMBpQ/cTe+BLnl5sz
8QmjKprFeEERaZ9LnLn9a1FQullG6DvSZXXNf3zXIn59k51aEzje+ZOzQQht
vKaP4uQnyH5WJ8acBNH+yT2HaKmkNdV22HfxIzgbtTc1g7RPywFaNT9Smvi5
fTabdJlV87ksfrTuazr7rUJcP/bhrT8/+jYkVpj3DvudOV2ZH4V0M2/gnsL1
i9fFw/lQ27v6gSKlb2T9W62bNF5Ub7DpA6sqaZ+R9E+GvKi0zrfooBr25KTq
/3hRSo16xOhe0pqhZYoCvMirMnPfGkvSRFn8j/ur0YaisJTTnjg/uyPGkwc5
pB1xFinG3qfhZMGFXrl/NTAto+JV4zu5yP9/lzYFVOF68crba7hQ+of7fbMN
2JP1Wz5yotnZJrOmHmzp0H5zTuSL9FQDlrH5HXiPrkJPW3cSc9qTZL9zo73X
2NHs44ruLXqkiQfyMsfZka7jwQJ7QxxflAjQZUfjv53dmsxxvLYpjpsdKYmn
DT13wPHxXrnHbKjCSaLO3h/bdOZSOSvq/8cV1lSHbS7gJ7YS/SsX7ix5j+uj
jnxlXYnW3dwokdGM4wJGJ6ZXIAtO9cygTuy0ybiyFejt2jP12l+x4ZCMwwqU
tqOOOY99iqz/sdviBQvysL/p/kAP+6dyuyUzCpEJLQwwxD7X/12TGWWMPWK6
aIItslVSgRmNOOcGmx0i7aNt/4aZGVlfHnzO6Yi9PmA8iwlpRGgNXfHH+QET
HHxMiPXtXwv7auxw2b7SZUjySIp6Vod9f81w1DLoSpt0jb3HPjYleH4Z/H3i
6C5t2NUfFyWWYaXa3tPeo9js29/7/YMVWYHXIjmmSff/dLP4C8wxa9LqjbFn
NN/w/4Gn+sXfuM2wdxEL04ugveCw/aAVtjKb9ftFuGHxKredhj1qExy4CEyr
D5cOuWD3oQ/EIhB+T1r/hWLHT3r8+gXL5zYvK7VhN1xyYFmA00Im6Vu7sFmU
947OQ2uJx2G5L9jXT2q+m4e01WUvN4xgS1bfD58Hi2yrU+zz2Cs8U2VIL5aP
Ta2aIb3PzNZkDlI0pg9WyWMHmqP8n9DDdyOlXAF7qagg9ifwjwgsl2zD9rE2
CfgJV+7tSS9Qwvate2f1E8x6b7K+2INt2cy68AOWfESLHhhgW312Uf8BplX7
N7qcxl6p7NA1A7lv5tzsz2L/m/SpngHh1/Hlls7YDqO5WTPQl/qbpu6G7all
HzAD54NTH3B4YSuoNKnMQMgRjtWJQdinChu2TkPTTO3vjhRsgfPNLd9AedxD
vyEN+0lsYOY3iB6UiCpNxz4p6HTrG9i1XVJOysKWUH6m/Q1miuRc3POxtUdX
5k0Ab0DgEHcttludbvw4HNyg/0F7FPuXY0HkGFy8U/HQ7iv2qsMJHmPw6I/6
qasT1L4o32wMxjoVmQqnsZ8q2q8eg6uR63cq/sLWic2+NQrpq6cjxTm+4/ch
QyhoBFiZI2lL8tiyueUJQ6Dgyrtl3VbsL4s5/kNg1ndrQXU79u7MOqcheFxy
LcR9J7bVy5M7hkD5slPFuBq2wvMjpYNwbFZdttMI2/ok69AAFI8MTuY5Y6sT
lnr9UNPyyOXFeWy7bMMd/dBSYvk9xQ27+xlNpB/GImtmH16k5untmOgDAb3n
f65fxfbTWR/WB2eT3TgO3KN88XJNL4ieYpIZycBeUjiq0gObLAqTel9g34FR
7h5Q0nSX68zGFniUONIN+sLDWxrysBvscqK7waO2VinnDdVPWmD5MzTIhWhe
fY+dVVbe2gWXv4rZCE1in82zftoB+oZJR/dMY3vzfbrSAQIZW4/SvlPnv/E9
3AGZ59WPJM1R98vrydcBfQuHrXf9o/J7M33bYR/rfQur1T/w85Te5toGq6U5
jSMVseMefXBuhW6/MKPCndiEu5RpK6SMiBh9UcH2OBCn2AraaXKGsnuwH+0R
nfsIHoq6+19pY9st81z9CJ3o+r42c+yxrOyoFkiwWdAQuoh9qvvGWBNYqL35
IXgJW8LDt6kJWNf5Jgt6YZ/9l5DfBKfbefgEr2K3mugENYGSmezQGn9s4ey/
W5qgQs/yFl8k1T/MYaoRBpRetnG9wtbX26vXABF8/93myqf2Sc8SawDdGdDk
KsTe0WUx/w7SMupTOUuwm65oJr0DN7kB71VvsWf8H7O/AyYxPmn2NuzoO8rt
dSDB4eLCMk+dv00gpgaYuA+I/l7A3k0LuFQDA7xb66Z+U/Pc2XSoBhKEJ6S6
/lL3xzolUAOyco5tWSt/4vOt7oa9BQU9ugZNEHvm+fD9alC9acJZoIzdt+52
USUIB23Lz9yFbbpuV2wl/LrDfSJxN7bmLTbfSiiMeFcSrI5d9kvUsBLUE/Xc
Tupg29Vw9VSAdiXqXGNBxaPa2CrgANOOZGd3Kq7Y7FkGM149zfcuYNd6TtiW
QfjsraVMT+wQpKBTBh2jwwenL2OfuizBVwbHGh8uufhh+zx8eLgUPB6ymbne
p8wk2vYGYlR6l9xfY/Ou8WcpAvUXdzZFFFDzFod3FEKv3B6z3CJqn+H+jELY
KHo/ebaUmk8XDhdCBrOh2YVaqt58MqcAyj68Sr7YSc1zqs01H4ad7pn994eK
x3itfwVn7byULvyl7rPBcDEPZq1O8rsuYzdNGHbmwQodaDnFMou/n9n2qDyQ
Eps6aM1J2Vh4bR7YtRgfVF2P3SewQiwXuvZwm87twQ7ZN2qYA/aKv7d/V8fW
rJDYkQPjm4ZXTwJ2XMN1gRz4LfDmw5A21S+7oCcbhKfPmrQaUP26F12zwTKh
4cDLI9imURHxWdDEecfY1QtbAvxUM0Hkku7zKG/KIUorM8F+iOAouUp5cdvH
DJgrvlC1ypc6D/Gez4B1znS1xNtU/ItjRjqcaFLa3P6Icg/bruewGNG5QqOU
mvcXj3cK6DBF2B8vpxyaYpYCd88dKAuqxPYpv7E5BSR0Ky+31VD96QvtybBv
If2HSxM1/2ybajKEHPbpe9pP1R8SZUkCGbFNxewr5rBPalcnwJMXi3wyrNhx
6zsTEkBIq9FRix3bZ3fCjQRgdbiwxouLirs3aSbASGrl6QkBymH+pU8hScVO
pFEGW2JS/G08yBk/uBiuh03ES36LhbgvZxte7Kf6bebOiwXh85pSDYaUy42v
xgJ7+Oj7FabYZaINfLEw1qEic9GacuQL9SeQ6tDy0dqJ6peUGP8I5L05FcVu
U/V1K549gMBbG9SF7lJxwyyvBzAcvV2PJ5iqZ3lg+gDi8sxt/4VRLpX4Gw2C
0w+DvsRQ9SzE4Wgg7BUGnqRR1spdHwXtesbh4vVUv8rS+ghQtqI/WdtAxefd
kiMgzME1dXUj1c/psF8EGF2/X7rcTOVPl0AEVBT2TPR2UvkxQ3nhkLnVWSfu
K2Ue24ww8FsTPCfBMY/v/+KW0hBIiHK5upcT26dVPzYEKtabsp3kpuLPoq+F
ALGRT+Q53zx1XqNmCHgrh6urrKPy7QVuB8MFyyjf/VuwiXMsWXfhZFQsn5sx
5TECbsHN9T4xESZUvkUpxy1IjLWTfn2Qiks2fwqCgWRJlSVLKj7wzTkIaPkJ
1v40ym4LiYFg1ZkcG+NC+e6UeADorc/aWhlKuXrPAT8wEv1wpjycMreFrB+Y
bphKLb1POSz1ny9YiyvIFj+gvMyW5QunpVPE8uKp812CBH3hzpa41cnZjHms
J65Di1rI91vNlHkEfK5Bm/qL7UEfKeduhGvwWaPxXMAnyo0xS1dhCHGN+3ZS
3pHndRXm9gYOePdT7g2/fAWEjXw+On+nbHMz+DLQbM7nmfEtYC9WL3lC6I2U
Cd01lGdiajyhKqVPUk2Q8umKME+QnzO9Jy1C2ZJN3hMW7io6zkpQvmZrcxFC
Sn8IR+6gbDDwwQMqpC54d5pQfpM87Qpz+hk57w9S9uaucgU5l+GxcnPKDQXR
rnCvyNIy7RDlyiFtVzhqsWvbZTrlRq+Y8zB7c6FX1IXyjZJ0Z5D9+t9eu3uU
W2r/OsH6mz4LV0Mo72bJdgJeyYDnj8Mof2lwcILf1hFrPkcy4pyNp6ChNnPQ
MpayvGSyI7ilDPoaZlEeEXM/AY4646qncyh3/912Amz6ZiYCcymnH5twgH3C
/8zf5lP2yjvhAMKBwhu1yilLXbE7DiWOxlW7WigPrHI+Bi9ZLC5ZtlL2+a54
DFJijyh4tFFuNZ+3g9B2x4jsLsr+QT524KB3w0FhkHKchQodVm16vUJqlrJE
XP1RODQisY9b6Be2XE68JSgtn8hkE6Y8G21kCVzCz9cyr6OsrvHLAsr2q4zP
b6DsV3TQAuQy9gf3yVA2usJtDr/c3TpfqlC+czvZFFruvNbOVKVc/M/WFNKf
LT1P+R/lFBlBU7Br97/6WINymTCnCdTteSgdsI9ynE2PEcQwVZ07Ykl598NK
ffBYx9FucYjyqUu6+nBg5wFNk8OUz6fX6wHziQ5+HVvKEoLtunCm9tvrrScY
8Q/LOqAeLMjMdIGyj0SIFgilHDnz5yLl/H+btGCmLLZ17hLlDplyTUj8sTl5
3JvyjqgpBFxWYNTqR9m0dFgdekQdI5MjKGvyGKuClYz6cHck5aaO0F3QtJVP
mf8B47zCThWogKJm78eUeYvdlCHFbjW3WRLlrMA6RZB0GjoakELZrltWEWJc
C9KK0yj3/S9gB9y9cVx/0wvGfiJPt4Fb4mvfpdeM+/vAJw8T6XdaFAsZ9ZVL
cuCQd0zSsZgxX+7kJjj0lrO0uYxh334ZUB+jLybVMepDeaXg1Yzy/u53DG/e
Ignbf3NE8zUyzks3lACpVbkq3i2M+Hv1DcCmwO568DOj32+BteCj3FPq38PY
1yZFEBbVc3iKeykTF/QE4JuxTbrsECO/IIUPTlop/jk6wsj/cpoXemmsBqFj
jPyjrjzQ4pI1+ucbI+4+xQGGl27uUpxmxIc+sEGVz5GbJ78z4qG1K+F16Arp
5jmGby8zwY6YTlfWX4z8Jg0C0p5mlqktMuwt+1fj0UtrWtI/hnnYFjQEi7dm
fCZ+U85Vn9W4V8W8xMvCcFjcdw329+0GuisZ1jwxpXH9U/qDy2wMpw1/1Vjs
uT6WxcEwrWJYw2PESnWEk2GLP/0ak1Nb/NfzMDwr0aNxcoH4ZMrL8COWdo2+
5U/S/vwMRzxp1jjM/tytSIDhwME6jRZen/IZIYatF8s1jEQseWVFGO5jfq1R
LSlPP7qeYWIwVQPklzNCNjBcxhylka/UulQt/v9xZk+NeRPhnX8k/9/kz/8B
oAN6OA==
      "]]}}, {{}, {}, 
    {GrayLevel[0.8], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{1.5053837490398985`, 0.}, {1.5058667004049764`, 
      4.440892098500626*^-16}, {1.506349651770054, 2.220446049250313*^-16}, {
      1.5068326031351318`, 2.220446049250313*^-16}, {1.5073155545002095`, 
      4.440892098500626*^-16}, {1.5077985058652872`, 
      2.220446049250313*^-16}, {1.5082814572303649`, 
      2.220446049250313*^-16}, {1.5087644085954426`, 0.}, {
      1.5092473599605203`, 0.}, {1.5131109708811419`, 0.}, {
      1.5208381927223855`, 0.}, {1.5362926364048726`, 
      2.220446049250313*^-16}, {1.5364274163202356`, 0.}}], 
     LineBox[{{1.5372360958124145`, 0.}, {1.5373708757277775`, 
      2.220446049250313*^-16}, {1.5384491150506823`, 0.}, {
      1.5406055936964922`, 2.220446049250313*^-16}, {1.5449185509881116`, 
      0.}, {1.545457670649564, 2.220446049250313*^-16}, {1.5457272304802903`, 
      0.}}], LineBox[{{1.4893393230743015`, 0.}, {1.489856885202224, 0.}, {
      1.4903744473301463`, 2.220446049250313*^-16}, {1.4908920094580689`, 
      2.220446049250313*^-16}, {1.4914095715859914`, 0.}, {
      1.4919271337139137`, 4.440892098500626*^-16}, {1.4929622579697588`, 
      2.220446049250313*^-16}, {1.4934798200976813`, 
      4.440892098500626*^-16}, {1.4939973822256039`, 0.}, {
      1.4950325064814487`, 2.220446049250313*^-16}, {1.49529128754541, 0.}}], 
     LineBox[{{1.5480184890414632`, 0.}, {1.5481532689568263`, 
      2.220446049250313*^-16}, {1.5486923886182786`, 0.}, {1.549231508279731, 
      0.}, {1.5497706279411836`, 0.}, {1.550309747602636, 
      2.220446049250313*^-16}, {1.5508488672640883`, 
      2.220446049250313*^-16}, {1.5511184270948146`, 0.}}], 
     LineBox[{{1.566483337446209, 0.}, {1.5670224571076616`, 
      2.220446049250313*^-16}, {1.5672920169383877`, 0.}}], 
     LineBox[{{1.546535909972469, 0.}, {1.5470750296339213`, 
      4.440892098500626*^-16}, {1.5472906774985022`, 0.}}], 
     LineBox[{{1.5635181793082207`, 0.}, {1.563787739138947, 
      2.220446049250313*^-16}, {1.5643268588003993`, 
      4.440892098500626*^-16}, {1.5646862719080343`, 0.}}], 
     LineBox[{{1.568639816092019, 0.}, {1.5691789357534713`, 0.}, {
      1.5697180554149237`, 4.440892098500626*^-16}, {1.5700774685225587`, 
      0.}}], LineBox[{{1.554083585232803, 0.}, {1.5546227048942556`, 
      2.220446049250313*^-16}, {1.555161824555708, 0.}}], 
     LineBox[{{1.4960676307372935`, 0.}, {1.496585192865216, 0.}}], 
     LineBox[{{1.552735786079172, 0.}, {1.5530053459098982`, 
      2.220446049250313*^-16}, {1.5531401258252613`, 0.}}]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"cos(\[Theta])\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{616., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1.5707962947378287`}, {0, 0.04}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.728810310296712*^9, 3.7288158535797696`*^9, {3.7288166310352373`*^9, 
   3.7288166386756744`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"relativeComplexFresnel", "[", 
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], ",", "0", ",", "ny"}], "]"}], " ", 
       "/", " ", 
       RowBox[{"relativeComplexFresnel", "[", 
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], ",", "0", ",", "0"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        FractionBox["\[Pi]", "2"]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"GrayLevel", "[", 
        RowBox[{"0.8", "*", "ny"}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<cos(\[Theta])\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"ny", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.728810513876356*^9, 3.7288105180255938`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"cos(\[Theta])\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.}, {0, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7288105237949233`*^9, 3.7288158593250985`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"relativeComplexFresnel", "[", 
          RowBox[{
           RowBox[{"Cos", "[", "x", "]"}], ",", "nx", ",", "ny"}], "]"}], " ",
          "/", " ", 
         RowBox[{"relativeComplexFresnel", "[", 
          RowBox[{
           RowBox[{"Cos", "[", "x", "]"}], ",", "0", ",", "0"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "nx", ",", 
          FractionBox["\[Pi]", "2"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.8", "*", "ny"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<cos(\[Theta])\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ny", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"nx", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728810551776524*^9, 3.728810581287212*^9}, {
  3.728810617917307*^9, 3.7288106240096555`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`nx$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`nx$$], 0, 1}}, Typeset`size$$ = {360., {111., 114.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`nx$199517$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`nx$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`nx$$, $CellContext`nx$199517$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Table[
         Plot[$CellContext`relativeComplexFresnel[
            
            Cos[$CellContext`x], $CellContext`nx$$, \
$CellContext`ny]/$CellContext`relativeComplexFresnel[
           Cos[$CellContext`x], 0, 0], {$CellContext`x, $CellContext`nx$$, Pi/
           2}, PlotRange -> {{0, 1}, {0, 1}}, PlotStyle -> 
          GrayLevel[0.8 $CellContext`ny], 
          AxesLabel -> {"cos(\[Theta])", ""}], {$CellContext`ny, 0, 1, 0.1}]],
       "Specifications" :> {{$CellContext`nx$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {156., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.728810571590657*^9, 3.728810582440278*^9}, 
   3.7288106250767164`*^9, 3.728815863147317*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting the Ny factor", "Subsection",
 CellChangeTimes->{{3.728810888418779*^9, 3.728810897586303*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s approximate the factor to the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "x"], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " curve depending on the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "y"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7288106927005844`*^9, 3.728810732171842*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"relativeComplexFresnel", "[", 
     RowBox[{"1", ",", "0", ",", "ny"}], "]"}], " ", "/", " ", 
    RowBox[{"relativeComplexFresnel", "[", 
     RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"ny", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(n\), \(y\)]\)\>\"", ",", 
      "\"\<Factor to curve \!\(\*SubscriptBox[\(n\), \(x\)]\)=0\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728810735952058*^9, 3.7288107859419174`*^9}, {
  3.7288118709609766`*^9, 3.728811911773311*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVlHk41HkAxkVPztrJ5ph4FKlN0iFp2+ilxCLkii5Z4sn6YbZ00LVI10hE
u65qGEchd5QjU4SihmHM5J5yG770hLRh9cf7vH+8/3zefz6aHgEOXpISEhI2
C/nRVl6DTZwh591yalz+/DzBQM5Bj266AULNAsycpgiU5fmRhXQzaPifUssS
E2zauSLtPt0JRa/rJNw/EPzWuC3vLv0EmEveJvYXEHASq7bfpgdCK34yy9ub
ICyEef4W/SqoXN7cJu4YTgQS+k16LNr9jMdrMkYhE2uZPD6RilujndNh5iMo
adS3sNDIRUFMpFGK/hBcwzraqphFqJYqz11jNYCA/NN6cV+eIy3IaWbPkT58
jmqtW7SoEicUtDTjsj+h7mVNJdfoFZT/YxvKfBPBJ8hy6SFxNZ7Ur05e79+D
l7L689l+tfhT5311jl4X0tnVcyvXvsXQRnc7ZnA7TJQrUhxzGhDRTVPK0v4A
vdqOZzUbuNg4q+jiuViAFhPHscdjjZA5Umf3VdQCSs6Xx9/CQ4pByKCKfDPq
hS4VyyKbEXnJNjTCoAmO5q6i3t4WnI3zfNGsyoUhi+nC0m7FlGvG0UGTBvTM
xbScvCLA8B/d3A++b9BnyWUrVwnRHsAxzpyvQV58d1CTZhssh5Mdfo6vRtoN
qZs6C5yqVnLTpadfYdLz8LB3WQcs2xfL01kcyJtdc8hX6YLmWlOBOLUCF2l9
CqKj3dh0njcyfq8UCi90JQQ2PVhTu990oq0ExmftZqu+9SC8Jb33ke5TJKVG
sNckiTBmHmwtGCiAm7PBO1nrj9g6XVulmp+Hp3yvmBdTH9Go2GkycOEJdjbk
Sfb/8wksmRXLfQwzsXqf92SMWS/2PiSZTOkMbDfYHl3U34uSxwlJ026p6P58
+w07vA9zl2kHdsmkQLzNPpyu3w9msaA+4cZDrBvRG17U3A9fqjP/2OtEVGuf
4TFCBrDx74pI23VxuNPC93TQHgTN+ND491/ugThyoiWrB1F0kD8TF3EXBc5K
e3f+NYTWUNXFq5dGgf0u7P5HxWFoWbcJhXNMTNcevaD4ahjFlLdbldIN9ERX
TtL8R+DI8bYKLLuKqaZd9NBlYkgJGo9HzYaAEavFCSoXQ2WLvdJM7WWovNOi
9bqNLvw4qaIfEQxHfvZ39blRTGq4/3p/6Cw+H0+mOjLH4FKUHXY9+DQq3XPD
l+0nCDycpexTwEApl7LusiUwa7goaE1noHj3huU59gTP3V6WWycykK2elmTj
QnBdmttrdZWBBGFCYYQHweNz8UYPDjJw5sA1kVwQgYJXi5HuTAB0TY4ZS6cT
NLk6u7km+mNd7kopwaOFnVY4MRruDy0NYV16FoFv8A5hFMMfqt8dnMzzCTxn
JELm9vljybPffcPLCY4YXT91fsIPos0G8VLNBNKUvU+PlR86Hky4NfMJWAlf
yywM/SBcmqvNFhLwlPLFZZp+eD+ik7eni6BCLrb+7VcK5RmrakOGCCwUWcUh
GRSeKXdG2C94Q1Z9x1a7GAqF4QkOmoRAXVR6QOcKhUxPpS7OF4Jzr3d5SLlQ
SOPx2FHTBOklauZSeymwTKN83L8RmErmFPy0mUJSns3mLbMEl6bErPVqFP5d
JT/5w1t20a2yttIU/gecVHBH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(y\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"Factor to curve \\!\\(\\*SubscriptBox[\\(n\\), \\(x\\)]\\)=0\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{543., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.728810787803024*^9, 3.7288119127243657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"taNy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ny", ",", 
       RowBox[{
        RowBox[{"relativeComplexFresnel", "[", 
         RowBox[{"1", ",", "0", ",", "ny"}], "]"}], " ", "/", " ", 
        RowBox[{"relativeComplexFresnel", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ny", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", "taNy", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelNy", "=", 
   RowBox[{"1", "+", 
    RowBox[{"b", "*", "x"}], "+", 
    RowBox[{"c", "*", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"d", "*", 
     SuperscriptBox["x", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelNy", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"b", "*", "x"}], "+", 
     RowBox[{"c", "*", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"d", "*", 
      SuperscriptBox["x", "3"]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelNy", "=", 
   RowBox[{"a", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "b"}], "*", "x"}]], "-", 
       SuperscriptBox["2", 
        RowBox[{"-", "b"}]]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"a", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["2", 
          RowBox[{"-", "b"}]]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fitNy", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"taNy", ",", 
    RowBox[{"{", "modelNy", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", 
        FractionBox["\[Pi]", "2"]}], "}"}], ",", "d"}], "}"}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcNy", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"modelNy", "/.", "fitNy"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"funcNy", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"1", "-", 
         RowBox[{"3.603488170946441`", " ", "x"}], "+", 
         RowBox[{"4.54559390006032`", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"1.9574383454756639`", " ", 
          SuperscriptBox["x", "3"]}]}]}], "]"}], "\[IndentingNewLine]", 
      "funcNy"}], "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"1", "-", 
        RowBox[{"3.5", "*", " ", "x"}], "+", 
        RowBox[{"4.4", "*", " ", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"1.90", "*", " ", 
         SuperscriptBox["x", "3"]}]}]}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"relativeComplexFresnel", "[", 
       RowBox[{"1", ",", "0", ",", "x"}], "]"}], " ", "/", " ", 
      RowBox[{"relativeComplexFresnel", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", " ", 
        RowBox[{"Thickness", "[", "0.015", "]"}]}], "}"}]}]}], "]"}], ",", 
   " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"funcNy", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"funcNy", "[", "0", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.728810955792632*^9, 3.728811416523985*^9}, {
   3.7288120578376656`*^9, 3.728812354227618*^9}, {3.728812387109499*^9, 
   3.7288124350572414`*^9}, {3.728812508128421*^9, 3.7288126337886086`*^9}, {
   3.7288126639243317`*^9, 3.72881268837173*^9}, 3.7288127385165987`*^9, {
   3.728812774294645*^9, 3.7288128196752405`*^9}, {3.728812852041092*^9, 
   3.7288128927314186`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1.`"}], ",", 
   RowBox[{"b", "\[Rule]", "5.998212004477587`"}], ",", 
   RowBox[{"c", "\[Rule]", "1.5707963267948966`"}], ",", 
   RowBox[{"d", "\[Rule]", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7288110088826685`*^9, 3.7288110601326003`*^9, {3.7288111069742794`*^9, 
   3.7288111962103834`*^9}, {3.7288112323314495`*^9, 3.72881131084694*^9}, {
   3.7288113684392347`*^9, 3.728811416732997*^9}, {3.7288120951317987`*^9, 
   3.728812200030799*^9}, {3.728812233915737*^9, 3.7288122748440776`*^9}, 
   3.728812345641127*^9, 3.728812394555925*^9, 3.7288124359482927`*^9, {
   3.7288125095415015`*^9, 3.728812591932214*^9}, 3.7288126345176497`*^9, {
   3.728812670807726*^9, 3.72881268925078*^9}, 3.728812738862618*^9, {
   3.7288127768107886`*^9, 3.7288128209923153`*^9}, 3.7288128539091983`*^9, 
   3.7288128933584547`*^9}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{"1.0158930130393862`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.015644376755615984`"}], "+", 
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", "5.998212004477587`"}], " ", "x"}]]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7288110088826685`*^9, 3.7288110601326003`*^9, {3.7288111069742794`*^9, 
   3.7288111962103834`*^9}, {3.7288112323314495`*^9, 3.72881131084694*^9}, {
   3.7288113684392347`*^9, 3.728811416732997*^9}, {3.7288120951317987`*^9, 
   3.728812200030799*^9}, {3.728812233915737*^9, 3.7288122748440776`*^9}, 
   3.728812345641127*^9, 3.728812394555925*^9, 3.7288124359482927`*^9, {
   3.7288125095415015`*^9, 3.728812591932214*^9}, 3.7288126345176497`*^9, {
   3.728812670807726*^9, 3.72881268925078*^9}, 3.728812738862618*^9, {
   3.7288127768107886`*^9, 3.7288128209923153`*^9}, 3.7288128539091983`*^9, 
   3.728812893362455*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.015], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVlHk41HkAxkVPztrJ5ph4FKlN0iFp2+ilxCLkii5Z4sn6YbZ00LVI10hE
u65qGEchd5QjU4SihmHM5J5yG770hLRh9cf7vH+8/3zefz6aHgEOXpISEhI2
C/nRVl6DTZwh591yalz+/DzBQM5Bj266AULNAsycpgiU5fmRhXQzaPifUssS
E2zauSLtPt0JRa/rJNw/EPzWuC3vLv0EmEveJvYXEHASq7bfpgdCK34yy9ub
ICyEef4W/SqoXN7cJu4YTgQS+k16LNr9jMdrMkYhE2uZPD6RilujndNh5iMo
adS3sNDIRUFMpFGK/hBcwzraqphFqJYqz11jNYCA/NN6cV+eIy3IaWbPkT58
jmqtW7SoEicUtDTjsj+h7mVNJdfoFZT/YxvKfBPBJ8hy6SFxNZ7Ur05e79+D
l7L689l+tfhT5311jl4X0tnVcyvXvsXQRnc7ZnA7TJQrUhxzGhDRTVPK0v4A
vdqOZzUbuNg4q+jiuViAFhPHscdjjZA5Umf3VdQCSs6Xx9/CQ4pByKCKfDPq
hS4VyyKbEXnJNjTCoAmO5q6i3t4WnI3zfNGsyoUhi+nC0m7FlGvG0UGTBvTM
xbScvCLA8B/d3A++b9BnyWUrVwnRHsAxzpyvQV58d1CTZhssh5Mdfo6vRtoN
qZs6C5yqVnLTpadfYdLz8LB3WQcs2xfL01kcyJtdc8hX6YLmWlOBOLUCF2l9
CqKj3dh0njcyfq8UCi90JQQ2PVhTu990oq0ExmftZqu+9SC8Jb33ke5TJKVG
sNckiTBmHmwtGCiAm7PBO1nrj9g6XVulmp+Hp3yvmBdTH9Go2GkycOEJdjbk
Sfb/8wksmRXLfQwzsXqf92SMWS/2PiSZTOkMbDfYHl3U34uSxwlJ026p6P58
+w07vA9zl2kHdsmkQLzNPpyu3w9msaA+4cZDrBvRG17U3A9fqjP/2OtEVGuf
4TFCBrDx74pI23VxuNPC93TQHgTN+ND491/ugThyoiWrB1F0kD8TF3EXBc5K
e3f+NYTWUNXFq5dGgf0u7P5HxWFoWbcJhXNMTNcevaD4ahjFlLdbldIN9ERX
TtL8R+DI8bYKLLuKqaZd9NBlYkgJGo9HzYaAEavFCSoXQ2WLvdJM7WWovNOi
9bqNLvw4qaIfEQxHfvZ39blRTGq4/3p/6Cw+H0+mOjLH4FKUHXY9+DQq3XPD
l+0nCDycpexTwEApl7LusiUwa7goaE1noHj3huU59gTP3V6WWycykK2elmTj
QnBdmttrdZWBBGFCYYQHweNz8UYPDjJw5sA1kVwQgYJXi5HuTAB0TY4ZS6cT
NLk6u7km+mNd7kopwaOFnVY4MRruDy0NYV16FoFv8A5hFMMfqt8dnMzzCTxn
JELm9vljybPffcPLCY4YXT91fsIPos0G8VLNBNKUvU+PlR86Hky4NfMJWAlf
yywM/SBcmqvNFhLwlPLFZZp+eD+ik7eni6BCLrb+7VcK5RmrakOGCCwUWcUh
GRSeKXdG2C94Q1Z9x1a7GAqF4QkOmoRAXVR6QOcKhUxPpS7OF4Jzr3d5SLlQ
SOPx2FHTBOklauZSeymwTKN83L8RmErmFPy0mUJSns3mLbMEl6bErPVqFP5d
JT/5w1t20a2yttIU/gecVHBH
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV1PlbDHgABvDpeLaDeipMO3iiFBIbHTqkN6EDWU2lkNg0MpRs2EetB2kH
nXTZyrAx0qlDh6zSMGmi0jTN1Gwy0ySjpuO7RWUdtfnhfd7n/QM+r3FwBJ2h
SqFQvGbzvbcxBtq5g37OHV9q2mdmCN6X7A6W0Wzwxbf3bcgEAXWOOLmCtgXz
xqqPtSoJfnKYn3uT5ovVaaNd+WICR4F1WSotBDfPqavFFRFwb/Bsk2inUJSi
yB/xJ4iNSTgTT/sDodRTES4Vowg5RWhxtHRYexR8eHVyBJrpnrf/HbuLCCfz
vCClEg8FVu7uRqXICdtkUlU3gIDYnm5eQiXSTI+2iRsViCg/uSbz4yMcF+zZ
F93ej/FrnU0qKvUYVpjoli97i6anjfVtTs/gk7cwQ+uMHMwoT509ww1gKtW2
mREZnmpZzRSH8/GwU2Y2uO8N7nEapheavcSiXWrpK5q74UKtu+NT0gLmZeeH
6zIlWMPvqWlc1Yb0Jc1x8Tc6IXLxGS0YFWBHjuZOyxwRwrSPCcVrhchPjmQ7
jQjRLPGv003uwA0v10A4tcPHLUDe3y9C7rwGRUd4G9bnJPjnmHYiO3TneTth
C3qn00RHznfhMVHve2X/Eu882zhUngSdm0SVodN8lGXJotqNu6GzS2XpdONz
5F5RizOPfo1JkUb0WBMPE4f2Kg8/7kFkpoBSNO8Z5my5RC83lCK2J8nd/CAX
Z/XezZUHyqB5i1f/SFyHuU8sKF1evQhuNuc6WD/Gxt9+/sb73ItCXWokJ7UG
7LuJnGVsOSxle4/r0qsR5GfTqrW9D0aXMbBhfiWqxIy0J5N9kGbui/HRewCH
ljJVxfW3WDmVmqa6uwxLtx6eSNvSj9YJg6lkx/uwtbFNqVT0o9i+9Pont0LI
xpNecFjvILS7oubIzsOwtTeLZqVACd9pivbhLpYPrVGqdCiQqj9cv7roDhpM
TwtPxLzH54mVSY2MHFwViQ/RTQcQYpTP6lWwQXy4KaoNA/AmTecTg7PwwG/B
ZodfB8FcKaFqyjPAaY292WegRIt2YGauLBVT/MDfDZ4pwXQQKugNV9GbUj+h
d3wISr+EWo2QeEy2b6Bd1B3GC+mLJGoTCyfSTbhRtcNYZKBJqV4bA8NWE73+
oBHI7dMyjl6Mho+4+Ovi6RHETn7iSRknMX7gdlhP4Si8v1yw82UfQf3BUpbu
DoLX/PvW4YoA/N0Wtl26k+Bj4V+XPc4FoNp5lX6JN0HgfZHMkxqA4sW5bK9Z
N/8x4hlP3PyRLcmuSAwmaHUVuIYX+OH0rkty7SgCv+R8x87TdFi47N+ocY+g
bHx/wZCvB5aXLlTryieQupfsH01yh4mRpOnerMvMrIoqB74bfvxK93UrJ/hF
s1NR4LgVP9R4HGPVEoybM5gjpq6QW9pkqXUQnAiyfNOhY4+eW2NBHbPObQUc
bfGV9ZDolJpyJLPbfMYuRN0Wr4bMy1ylBBSOGc/i2zrU5i3hxwwSaDH7BiqU
K1BDfZPoPUwgsij9ED9oigpWNt2YELxUaD+PHjRG4aEFUu5HAtVB681u/xgi
VyjkXJsiyLC6wK2S6SNn0zXmwc8EoVNH1+UJNMAu87Jc+40g+IA65WzLlPOf
S+ZMfP+tgciI+u5Vhs7/A6LVd24=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{592., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7288110088826685`*^9, 3.7288110601326003`*^9, {3.7288111069742794`*^9, 
   3.7288111962103834`*^9}, {3.7288112323314495`*^9, 3.72881131084694*^9}, {
   3.7288113684392347`*^9, 3.728811416732997*^9}, {3.7288120951317987`*^9, 
   3.728812200030799*^9}, {3.728812233915737*^9, 3.7288122748440776`*^9}, 
   3.728812345641127*^9, 3.728812394555925*^9, 3.7288124359482927`*^9, {
   3.7288125095415015`*^9, 3.728812591932214*^9}, 3.7288126345176497`*^9, {
   3.728812670807726*^9, 3.72881268925078*^9}, 3.728812738862618*^9, {
   3.7288127768107886`*^9, 3.7288128209923153`*^9}, 3.7288128539091983`*^9, 
   3.7288128934294586`*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.7288110088826685`*^9, 3.7288110601326003`*^9, {3.7288111069742794`*^9, 
   3.7288111962103834`*^9}, {3.7288112323314495`*^9, 3.72881131084694*^9}, {
   3.7288113684392347`*^9, 3.728811416732997*^9}, {3.7288120951317987`*^9, 
   3.728812200030799*^9}, {3.728812233915737*^9, 3.7288122748440776`*^9}, 
   3.728812345641127*^9, 3.728812394555925*^9, 3.7288124359482927`*^9, {
   3.7288125095415015`*^9, 3.728812591932214*^9}, 3.7288126345176497`*^9, {
   3.728812670807726*^9, 3.72881268925078*^9}, 3.728812738862618*^9, {
   3.7288127768107886`*^9, 3.7288128209923153`*^9}, 3.7288128539091983`*^9, 
   3.7288128934334593`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting regular integral", "Subsection",
 CellChangeTimes->{{3.7288133362807884`*^9, 3.728813343249187*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s plot the regular integral that \
isn\[CloseCurlyQuote]t dependent on the fresnel term:\n\t",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     RowBox[{
      SubsuperscriptBox[
       StyleBox["\[Integral]",
        SpanMinSize->0.,
        SpanMaxSize->DirectedInfinity[1]], 
       SubscriptBox[
        StyleBox["\[Theta]",
         FontFamily->"Times",
         FontWeight->"Plain",
         FontSlant->"Plain"], "0"], 
       SubscriptBox[
        StyleBox["\[Theta]",
         FontFamily->"Times",
         FontWeight->"Plain",
         FontSlant->"Plain"], "1"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["n",
           FontFamily->"Times",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox["'",
           FontFamily->"Times",
           FontWeight->"Bold",
           FontSlant->"Italic"]], ".", 
         SubsuperscriptBox[
          StyleBox["\[Omega]",
           FontFamily->"Times",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox["i",
           FontFamily->"Times",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox["'",
           FontFamily->"Times",
           FontWeight->"Bold",
           FontSlant->"Italic"]]}], ")"}], 
       RowBox[{
        StyleBox["sin",
         FontFamily->"Times",
         FontWeight->"Plain",
         FontSlant->"Plain"], "\[InvisibleApplication]", 
        RowBox[{"(", "\[Theta]", ")"}]}], "d", 
       StyleBox["\[Theta]",
        FontFamily->"Times",
        FontWeight->"Plain",
        FontSlant->"Plain"]}]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["n", "x"], "2"], "[", 
       RowBox[{
        SubscriptBox[
         StyleBox["\[Theta]",
          FontFamily->"Times",
          FontWeight->"Plain",
          FontSlant->"Plain"], "1"], "-", 
        SubscriptBox[
         StyleBox["\[Theta]",
          FontFamily->"Times",
          FontWeight->"Plain",
          FontSlant->"Plain"], "0"], "+", 
        RowBox[{
         RowBox[{
          StyleBox["sin",
           FontFamily->"Times",
           FontWeight->"Plain",
           FontSlant->"Plain"], "\[InvisibleApplication]", 
          RowBox[{"(", 
           SubscriptBox[
            StyleBox["\[Theta]",
             FontFamily->"Times",
             FontWeight->"Plain",
             FontSlant->"Plain"], "0"], ")"}]}], 
         RowBox[{
          StyleBox["cos",
           FontFamily->"Times",
           FontWeight->"Plain",
           FontSlant->"Plain"], "\[InvisibleApplication]", 
          RowBox[{"(", 
           SubscriptBox[
            StyleBox["\[Theta]",
             FontFamily->"Times",
             FontWeight->"Plain",
             FontSlant->"Plain"], "0"], ")"}]}]}], "-", "\[NonBreakingSpace]", 
        RowBox[{
         RowBox[{
          StyleBox["sin",
           FontFamily->"Times",
           FontWeight->"Plain",
           FontSlant->"Plain"], "\[InvisibleApplication]", 
          RowBox[{"(", 
           SubscriptBox[
            StyleBox["\[Theta]",
             FontFamily->"Times",
             FontWeight->"Plain",
             FontSlant->"Plain"], "1"], ")"}]}], 
         RowBox[{
          StyleBox["cos",
           FontFamily->"Times",
           FontWeight->"Plain",
           FontSlant->"Plain"], "\[InvisibleApplication]", 
          RowBox[{"(", 
           SubscriptBox[
            StyleBox["\[Theta]",
             FontFamily->"Times",
             FontWeight->"Plain",
             FontSlant->"Plain"], "1"], ")"}]}]}]}], "]"}], "+", 
      RowBox[{
       FractionBox[
        SubscriptBox["n", "y"], "2"], "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          StyleBox["cos",
           FontFamily->"Times",
           FontWeight->"Plain",
           FontSlant->"Plain"], "2"], "\[InvisibleApplication]", 
         RowBox[{"(", 
          SubscriptBox[
           StyleBox["\[Theta]",
            FontFamily->"Times",
            FontWeight->"Plain",
            FontSlant->"Plain"], "0"], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          StyleBox["cos",
           FontFamily->"Times",
           FontWeight->"Plain",
           FontSlant->"Plain"], "2"], "\[InvisibleApplication]", 
         RowBox[{"(", 
          SubscriptBox[
           StyleBox["\[Theta]",
            FontFamily->"Times",
            FontWeight->"Plain",
            FontSlant->"Plain"], "1"], ")"}]}]}], "]"}]}]}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7288133461053505`*^9, 3.728813383025462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7288134739666634`*^9, 3.728813513497925*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.72881349978014*^9, 3.7288135144969816`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["x", "2"], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.72881349978014*^9, 3.728813514499982*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"regularTermNx", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["x", "2"], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regularTermNy", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"regularTermNx", "[", "x", "]"}], "-", 
      RowBox[{"regularTermNx", "[", "0", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"regularTermNy", "[", "x", "]"}], "-", 
      RowBox[{"regularTermNy", "[", "0", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7288133875977235`*^9, {3.7288134281150413`*^9, 3.728813467097271*^9}, {
   3.728813528764798*^9, 3.728813542372576*^9}, {3.728813729556282*^9, 
   3.728813795107032*^9}, {3.728813893171641*^9, 3.7288139259145136`*^9}, {
   3.728814012100443*^9, 3.728814020824942*^9}, {3.728814055013898*^9, 
   3.7288140910799603`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
zNVcEWKAhvrOcytCE/A/IQ1LwQ==
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwd1As0VdkfB/ATFT2m6KH0ECmKVCqTqPu9qZnCkOT9ioSJJLeU10zXOzPy
jtQUlbxClFfjVjePEhIiSRzlkYQQ955L8t/zP2udddZnfc/Z+7d/Z6+tcMzD
2EmMoqhBcv/3FH8yt65Lw4FF/f+q2C0vI68kFwdQFP9GrvIF1nh7tGFr7CHi
rfpKysks97eSldK55sT1yV9C8lmde198LIo9Smzh06n0hJXZvJ/KLXUkjr1z
xKyKdWzu+igq14VY6umrkAbWKsySO5LiRvz8cmZrC6v5TE/2nVgPYvuhIiWa
daDp42r/Mk9Q3Jhsv6IuVuqQsdOd0jMkT1LRMOtjUXPKs+sKvEjOzgzjDLJs
FbePCXPOg2KfP/kwZIT1757b2grpPsRa6n7RYywZi8VBeil+oPhh3y62Cln1
Ed+kr8deILluSpjSNCvhdf6mrkoucdD83ZdnoKLzRP35sgAy30izZZE4FCZb
l90sDSK5a/gsM0kYScaWapQEk/k9VeOa5uLPpXpHqwtCQKVcqP6F8xPebfk3
7VtOGKjTLjkRIdKQ3MPRu5h18b/3J1aJL8ZOPZWhVenhoOQbTyF6CeKPX9X4
NeVvUt+Um1brMhgk+VZciY0ClVfZMktpDVhHZAsSDkSDyhjXWRQtj2bL8Vkf
KolPV6M/XgHiLjmZXmUxoC5W9n8rVIR9wOqRG6VxoOpfqZ403QBhmEjn8654
Mr/Uu8fRGxEZ2Ry/vYSY/+5m62sV8K5d0qwquAxKc2Szi6caZIumLozkJJL6
OFNfg9WRx2tt0N50hYzHvlqydxsOlhcqhmYRF8QMHRfbjnP17s9XpCeBqkiK
/D1qBxr72xfsT7kG6uQa0xVvdyJizePrCbHJoIZV/FetA36tuabO/ykF1P6A
Q9tWsPEs1GKJhjGxPy2enMrG86mGVrk24pP5asb8vaj6UnF8dOAmqN+1nOUW
70f18yzfJKlU0h/N3v1KutALcrFdYErMj1YeatRFNWsdOyiJuKrbkg7QQ03h
9Vnua++A2mBwNKlXH7W3o6PZO9JA3Y8Ldq0xxMsL59I+mWeA6m8q1AowhqH2
9nCbf4g3rS+r+WyMOsFXt4ZO4r+XWXKPHEGd+wn10hOZoFJjJE1UTFBnbcOL
9MsCZbz0cmqPKep36jRqJGeD8qu17Iq1RL9w9vTeM3ngFmzzf9llj2lFg4qd
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{440., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1.5707962947378287`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7288137629021897`*^9, 3.7288137955590577`*^9}, {
   3.728813903892254*^9, 3.7288139262635336`*^9}, 3.728814021119959*^9, {
   3.728814067841631*^9, 3.728814091478983*^9}}]
}, Open  ]],

Cell[TextData[{
 "The red ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "y"], TraditionalForm]]],
 " term is pretty simple to estimate and already depends on cos(\[Theta]).\n\
The blue ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "x"], TraditionalForm]]],
 " term is more problematic and involves an acos(\[Theta]) to retrieve the \
angle \[Theta] itself.\nWe could totally merge the complicated "
}], "Text",
 CellChangeTimes->{{3.728814309051428*^9, 3.7288143805775185`*^9}, {
  3.72881451102498*^9, 3.7288145137051334`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Assuming Ny always is ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["Nx", "2"]}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.728810923161766*^9, 3.728810936255515*^9}}],

Cell["It\[CloseCurlyQuote]s a bad idea!", "Text",
 CellChangeTimes->{{3.728810946194083*^9, 3.728810948890238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"complexFresnel2", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "a"}], "}"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"a", "*", 
            RowBox[{"Sin", "[", "x", "]"}]}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["a", "2"]}]], "*", 
            RowBox[{"Cos", "[", "x", "]"}]}]}], ")"}], "5"], 
        RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"complexFresnel2", "[", 
       RowBox[{"x", ",", "a"}], "]"}], "-", 
      RowBox[{"complexFresnel2", "[", 
       RowBox[{"0", ",", "a"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7288078499929905`*^9, 3.7288079035400534`*^9}}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "a"}], "}"}], ",", 
   RowBox[{
    FractionBox["1", "192"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1260"}], " ", "a", " ", "x"}], "-", 
      RowBox[{"72", " ", 
       RowBox[{"(", 
        RowBox[{"11", "+", 
         RowBox[{"20", " ", 
          SuperscriptBox["a", "2"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"45", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"11", "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["a", "2"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"220", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"320", " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"160", " ", 
       SuperscriptBox["a", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"66", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"252", " ", 
       SuperscriptBox["a", "2"], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"24", " ", 
       SuperscriptBox["a", "4"], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"12", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}], "+", 
      RowBox[{"96", " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}], "-", 
      RowBox[{"96", " ", 
       SuperscriptBox["a", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["a", "2"], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["a", "4"], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}], "+", 
      RowBox[{"1440", " ", "a", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"225", " ", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "+", 
      RowBox[{"540", " ", 
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"400", " ", "a", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "-", 
      RowBox[{"160", " ", 
       SuperscriptBox["a", "3"], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"195", " ", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"240", " ", 
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"24", " ", 
       SuperscriptBox["a", "5"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"48", " ", "a", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}], "+", 
      RowBox[{"96", " ", 
       SuperscriptBox["a", "3"], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}], "+", 
      RowBox[{"5", " ", "a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}], "-", 
      RowBox[{"20", " ", 
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["a", "5"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], ")"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.728807871712233*^9, 3.728807904436105*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {360., {117., 121.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$109229$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$109229$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`complexFresnel2[$CellContext`x, $CellContext`a$$] - \
$CellContext`complexFresnel2[0, $CellContext`a$$], {$CellContext`x, 0, 1}, 
        PlotRange -> {0, 0.5}], 
      "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.728807871712233*^9, 3.7288079045571117`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"complexFresnel", "[", 
       RowBox[{"x", ",", "a", ",", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["a", "2"]}]]}], "]"}], "-", 
      RowBox[{"complexFresnel", "[", 
       RowBox[{"0", ",", "a", ",", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["a", "2"]}]]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7288079494676805`*^9, 3.728807970034857*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {360., {117., 121.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$113420$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$113420$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`complexFresnel[$CellContext`x, $CellContext`a$$, (
           1 - $CellContext`a$$^2)^
          Rational[1, 2]] - $CellContext`complexFresnel[
        0, $CellContext`a$$, (1 - $CellContext`a$$^2)^
         Rational[1, 2]], {$CellContext`x, 0, 1}, PlotRange -> {0, 0.5}], 
      "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.728807971062916*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Blue-Noise Shadow Sampling", "Subsection",
 CellChangeTimes->{{3.728814496321139*^9, 3.7288145049366317`*^9}}],

Cell["\<\
Blue-noise distribution of 64 samples generated by simply finding the 64 \
first pixels of a blue-noise texture...\
\>", "Text",
 CellChangeTimes->{{3.7287467320082417`*^9, 3.728746753118449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"shadowSamples", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.75"}], ",", "0.6875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1875", ",", 
       RowBox[{"-", "0.6875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "0.5625"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8125"}], ",", 
       RowBox[{"-", "0.78125"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.21875"}], ",", 
       RowBox[{"-", "0.21875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "0.1875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.71875", ",", 
       RowBox[{"-", "0.375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.40625", ",", "0.71875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.3125"}], ",", 
       RowBox[{"-", "0.9375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.84375", ",", "0.375"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6875", ",", 
       RowBox[{"-", "0.875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.28125", ",", 
       RowBox[{"-", "0.25"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.65625"}], ",", 
       RowBox[{"-", "0.375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.34375"}], ",", "0.1875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0625", ",", "0.9375"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "0.78125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", 
       RowBox[{"-", "0.03125"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.03125", ",", "0.0625"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1875"}], ",", 
       RowBox[{"-", "0.59375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.46875"}], ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1875", ",", "0.46875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.96875"}], ",", 
       RowBox[{"-", "0.46875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.65625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8125"}], ",", "0.375"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5625", ",", 
       RowBox[{"-", "0.09375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", 
       RowBox[{"-", "0.96875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", 
       RowBox[{"-", "0.625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "0.96875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.53125", ",", "0.4375"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.09375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "0.78125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.03125", ",", 
       RowBox[{"-", "0.40625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", 
       RowBox[{"-", "0.1875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.96875", ",", 
       RowBox[{"-", "0.9375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.65625", ",", "0.15625"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8125", ",", 
       RowBox[{"-", "0.625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0625"}], ",", "0.3125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "0.875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0625"}], ",", 
       RowBox[{"-", "0.8125"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.40625"}], ",", 
       RowBox[{"-", "0.40625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0.5625"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0.1875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.59375"}], ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6875", ",", "0.625"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.09375", ",", "0.6875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.15625"}], ",", "0.84375"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.46875", ",", 
       RowBox[{"-", "0.375"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "0.875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0625", ",", 
       RowBox[{"-", "0.15625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1875"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.90625", ",", 
       RowBox[{"-", "0.25"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", 
       RowBox[{"-", "0.46875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.15625", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.75"}], ",", 
       RowBox[{"-", "0.5625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.28125"}], ",", "0.40625"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.84375"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "0.71875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.875"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1875", ",", 
       RowBox[{"-", "0.90625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5625"}], ",", "0.71875"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.6875"}], ",", 
       RowBox[{"-", "0.15625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.65625"}], ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", 
       RowBox[{"-", "0.78125"}]}], "}"}], ","}], "}"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "shadowSamples", "]"}]}], "Input",
 CellChangeTimes->{{3.7287287963493805`*^9, 3.7287288068329806`*^9}, {
  3.728728852224577*^9, 3.728728863136201*^9}, {3.728729514429453*^9, 
  3.7287295154915133`*^9}, {3.728729740426379*^9, 3.72872974131443*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdk0sKglAUhqWdtJJaQ0sIGrelluDQmQ0cOGggESES0lOzly2hwv8L/C/I
x/m995x7Hnc4nU9mgyAIxt/vx25d447VqGMqVtKX4lH6TXYjroy5+anFXP8L
0zfSX+Kd/dxDfOj/WnYm+0JccRv344fiCz9iY/ZC5xZ2LpV+Ektxb3mWYuv7
7J7Uj/yoa2R6a3HOcZ+t9IO4G/Xj/f3RL/IUC+nUNTW/9OMiO6H/dp9Q3KBb
XUPLuzC+bb6wqSt1z2weiBOZntgc0Zfc8uV++GWF5oe6sJ42f5yn34n55X0d
mV97B+y7W/61zc+/T9r3NL+8J94t92fumCPmq4k/ECasQA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-1., 0.96875}, {-0.96875, 0.96875}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.72872886556034*^9, 3.7287295158865356`*^9, 
  3.7287297417294536`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1613, 992},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 8152, 255, 447, "Text"],
Cell[8713, 277, 1621, 46, 75, "Text"],
Cell[CellGroupData[{
Cell[10359, 327, 349, 9, 33, "Input"],
Cell[10711, 338, 3324, 92, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14072, 435, 1181, 30, 60, "Input"],
Cell[15256, 467, 3034, 83, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18327, 555, 221, 4, 31, "Input"],
Cell[18551, 561, 180, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18768, 569, 826, 17, 44, "Input"],
Cell[19597, 588, 5538, 99, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25172, 692, 1013, 24, 44, "Input"],
Cell[26188, 718, 2315, 44, 366, "Output"]
}, Open  ]],
Cell[28518, 765, 483, 13, 31, "Input"],
Cell[CellGroupData[{
Cell[29026, 782, 1151, 28, 44, "Input"],
Cell[30180, 812, 113807, 1891, 435, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144024, 2708, 971, 26, 44, "Input"],
Cell[144998, 2736, 63716, 1069, 402, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208751, 3810, 1093, 30, 73, "Input"],
Cell[209847, 3842, 869, 22, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210753, 3869, 1449, 39, 100, "Input"],
Cell[212205, 3910, 1994, 41, 336, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214236, 3956, 109, 1, 49, "Subsection"],
Cell[214348, 3959, 433, 14, 33, "Text"],
Cell[CellGroupData[{
Cell[214806, 3977, 785, 20, 31, "Input"],
Cell[215594, 3999, 2779, 57, 348, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218410, 4061, 4293, 123, 309, "Input"],
Cell[222706, 4186, 901, 16, 31, "Output"],
Cell[223610, 4204, 967, 20, 33, "Output"],
Cell[224580, 4226, 4995, 92, 400, "Output"],
Cell[229578, 4320, 679, 10, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230306, 4336, 115, 1, 49, "Subsection"],
Cell[230424, 4339, 4704, 149, 62, "Text"],
Cell[CellGroupData[{
Cell[235153, 4492, 410, 12, 52, "Input"],
Cell[235566, 4506, 212, 6, 46, "Output"],
Cell[235781, 4514, 237, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236055, 4526, 1753, 48, 148, "Input"],
Cell[237811, 4576, 11052, 192, 304, "Output"]
}, Open  ]],
Cell[248878, 4771, 536, 14, 71, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249451, 4790, 274, 9, 58, "Subsection"],
Cell[249728, 4801, 115, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[249868, 4806, 1295, 38, 70, "Input"],
Cell[251166, 4846, 5000, 149, 144, "Output"],
Cell[256169, 4997, 1673, 34, 348, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257879, 5036, 792, 23, 45, "Input"],
Cell[258674, 5061, 1758, 36, 348, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260481, 5103, 116, 1, 49, "Subsection"],
Cell[260600, 5106, 206, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[260831, 5114, 6497, 200, 192, "Input"],
Cell[267331, 5316, 1280, 32, 233, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
